{
    "classes": [
        {
            "name": "Client",
            "description": "Represents the main Eris client",
            "extends": [
                "EventEmitter"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Client",
                "description": "Create a Client",
                "parameters": [
                    {
                        "name": "token",
                        "type": "String",
                        "description": "bot token",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "options",
                        "type": "Object",
                        "description": "Eris options (all options are optional)",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.autoreconnect",
                        "type": "Boolean",
                        "description": "Have Eris autoreconnect when connection is lost",
                        "default": true,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.compress",
                        "type": "Boolean",
                        "description": "Whether to request WebSocket data to be compressed or not",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.connectionTimeout",
                        "type": "Number",
                        "description": "How long in milliseconds to wait for the connection to handshake with the server",
                        "default": 30000,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.disableEvents",
                        "type": "Object",
                        "description": "If disableEvents[eventName] is true, the WS event will not be processed. This can cause significant performance increase on large bots. [A full list of the WS event names can be found on the docs reference page](/Eris/docs/reference#ws-event-names)",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.disableEveryone",
                        "type": "Boolean",
                        "description": "When true, filter out @everyone/@here by default in createMessage/editMessage",
                        "default": true,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.firstShardID",
                        "type": "Number",
                        "description": "The ID of the first shard to run for this client",
                        "default": 0,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.getAllUsers",
                        "type": "Boolean",
                        "description": "Get all the users in every guild. Ready time will be severely delayed",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.guildCreateTimeout",
                        "type": "Number",
                        "description": "How long in milliseconds to wait for a GUILD_CREATE before \"ready\" is fired. Increase this value if you notice missing guilds",
                        "default": 2000,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.largeThreshold",
                        "type": "Number",
                        "description": "The maximum number of offline users per guild during initial guild data transmission",
                        "default": 250,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.latencyThreshold",
                        "type": "Number",
                        "description": "The average request latency at which Eris will start emitting latency errors",
                        "default": 4000,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.lastShardID",
                        "type": "Number",
                        "description": "The ID of the last shard to run for this client",
                        "default": "options.maxShards - 1",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.maxShards",
                        "type": [
                            "Number",
                            "String"
                        ],
                        "description": "The total number of shards you want to run. If \"auto\" Eris will use Discord's recommended shard count.",
                        "default": 1,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.messageLimit",
                        "type": "Number",
                        "description": "The maximum size of a channel message cache",
                        "default": 100,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.opusOnly",
                        "type": "Boolean",
                        "description": "Whether to suppress the node-opus not found error or not",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.restMode",
                        "type": "Boolean",
                        "description": "Whether to enable getting objects over REST. This should only be enabled if you are not connecting to the gateway. Bot tokens must be prefixed manually in REST mode",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.seedVoiceConnections",
                        "type": "Boolean",
                        "description": "Whether to populate bot.voiceConnections with existing connections the bot account has during startup. Note that this will disconnect connections from other bot sessions",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.sequencerWait",
                        "type": "Number",
                        "description": "How long to wait between sending potentially ratelimited requests. This number should be at least 3/4 your ping (in milliseconds)",
                        "default": 200,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.defaultImageFormat",
                        "type": "String",
                        "description": "The default format to provide user avatars, guild icons, and group icons in. Can be \"jpg\", \"png\", \"gif\", or \"webp\"",
                        "default": "\"jpg\"",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.defaultImageSize",
                        "type": "Number",
                        "description": "The default size to return user avatars, guild icons, and group icons as. Can be 128, 256, 512, 1024, or 2048.",
                        "default": 128,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.ws",
                        "type": "Object",
                        "description": "An object of WebSocket options to pass to the shard WebSocket constructors",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    }
                ],
                "examples": []
            },
            "functions": [
                {
                    "name": "connect",
                    "access": "",
                    "virtual": false,
                    "description": "Tells all shards to connect.",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": "Resolves when all shards are initialized"
                    }
                },
                {
                    "name": "getGateway",
                    "access": "",
                    "virtual": false,
                    "description": "Get the Discord gateway URL",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<String>",
                        "description": "Resolves with the gateway URL"
                    }
                },
                {
                    "name": "getBotGateway",
                    "access": "",
                    "virtual": false,
                    "description": "Get the Discord gateway URL along with bot metadata",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with the gateway data"
                    }
                },
                {
                    "name": "disconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Disconnects all shards",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Shard disconnect options",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "options.reconnect",
                            "type": [
                                "String",
                                "Boolean"
                            ],
                            "description": "false means destroy everything, true means you want to reconnect in the future, \"auto\" will autoreconnect",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "joinVoiceChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Join a voice channel. If joining a group call, the voice connection ID will be stored in voiceConnections as \"call\". Otherwise, it will be the guild ID",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the voice channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "VoiceConnection constructor options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.shared",
                            "type": "Object",
                            "description": "Whether the VoiceConnection will be part of a SharedStream or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.opusOnly",
                            "type": "Object",
                            "description": "Skip opus encoder initialization. You should not enable this unless you know what you are doing",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<VoiceConnection>",
                        "description": "Resolves with a VoiceConnection"
                    }
                },
                {
                    "name": "leaveVoiceChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Leaves a voice channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the voice channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "editAFK",
                    "access": "",
                    "virtual": false,
                    "description": "Update the bot's AFK status. Setting this to true will enable push notifications for userbots.",
                    "parameters": [
                        {
                            "name": "afk",
                            "type": "Boolean",
                            "description": "Whether the bot user is AFK or not",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "editStatus",
                    "access": "",
                    "virtual": false,
                    "description": "Update the bot's status on all guilds",
                    "parameters": [
                        {
                            "name": "status",
                            "type": "String",
                            "description": "Sets the bot's status, either \"online\", \"idle\", \"dnd\", or \"invisible\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game",
                            "type": "Object",
                            "description": "Sets the bot's active game, null to clear",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game.name",
                            "type": "String",
                            "description": "Sets the name of the bot's active game",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "game.type",
                            "type": "Number",
                            "description": "The type of game. 0 is default, 1 is streaming (Twitch only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game.url",
                            "type": "String",
                            "description": "Sets the url of the shard's active game",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "getChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a Channel object from a channelID",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": [
                            "CategoryChannel",
                            "GroupChannel",
                            "PrivateChannel",
                            "TextChannel",
                            "VoiceChannel"
                        ],
                        "description": ""
                    }
                },
                {
                    "name": "createChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the channel in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The type of the channel, either 0 or 2",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "parentID",
                            "type": "String",
                            "description": "ID of the parent category for a channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a channel's properties",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.icon",
                            "type": "String",
                            "description": "The icon of the channel as a base64 data URI (group channels only). Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.ownerID",
                            "type": "String",
                            "description": "The ID of the channel owner (group channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.topic",
                            "type": "String",
                            "description": "The topic of the channel (guild text channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.nsfw",
                            "type": "Boolean",
                            "description": "The nsfw status of the channel (guild channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.bitrate",
                            "type": "Number",
                            "description": "The bitrate of the channel (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.userLimit",
                            "type": "Number",
                            "description": "The channel user limit (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.parentID",
                            "type": "String",
                            "description": "The ID of the parent channel category for this channel (guild text/voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|GroupChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editChannelPosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild channel's position. Note that channel position numbers are lowest on top and highest at the bottom.",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild channel, or leave a private or group channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "sendChannelTyping",
                    "access": "",
                    "virtual": false,
                    "description": "Send typing status in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editChannelPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role (everyone role ID = guild ID)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "allow",
                            "type": "Number",
                            "description": "The permissions number for allowed permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deny",
                            "type": "Number",
                            "description": "The permissions number for denied permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The object type of the overwrite, either \"member\" or \"role\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteChannelPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getChannelInvites",
                    "access": "",
                    "virtual": false,
                    "description": "Get all invites in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Invite>>",
                        "description": ""
                    }
                },
                {
                    "name": "createChannelInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Create an invite for a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Invite generation options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxAge",
                            "type": "Number",
                            "description": "How long the invite should last in seconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxUses",
                            "type": "Number",
                            "description": "How many uses the invite should last for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.temporary",
                            "type": "Boolean",
                            "description": "Whether the invite is temporary or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.unique",
                            "type": "Boolean",
                            "description": "Whether the invite is unique or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "getChannelWebhooks",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the webhooks in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel to get webhooks for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of webhook objects"
                    }
                },
                {
                    "name": "getWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Get a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook, used instead of the Bot Authorization token",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with a webhook object"
                    }
                },
                {
                    "name": "createChannelWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel webhook",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel to create the webhook in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Webhook options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The default name",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.avatar",
                            "type": "String",
                            "description": "The default avatar as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with a webhook object"
                    }
                },
                {
                    "name": "editWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Webhook options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The new default name",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.avatar",
                            "type": "String",
                            "description": "The new default avatar as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook, used instead of the Bot Authorization token",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with a webhook object"
                    }
                },
                {
                    "name": "executeWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Execute a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Webhook execution options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "\"\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.file",
                            "type": [
                                "Object",
                                "Array.<Object>"
                            ],
                            "description": "A file object (or an Array of them)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.file.file",
                            "type": "Buffer",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.embeds",
                            "type": "Array.<Object>",
                            "description": "An array of Discord embeds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.username",
                            "type": "String",
                            "description": "A custom username, defaults to webhook default username if not specified",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.avatarURL",
                            "type": "String",
                            "description": "A URL for a custom avatar, defaults to webhook default avatar if not specified",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.tts",
                            "type": "Boolean",
                            "description": "Whether the message should be a TTS message or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.wait",
                            "type": "Boolean",
                            "description": "Whether to wait for the server to confirm the message create or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "executeSlackWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Execute a slack-style webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Slack webhook options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.wait",
                            "type": "Boolean",
                            "description": "Whether to wait for the server to confirm the message create or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook, used instead of the Bot Authorization token",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getGuildWebhooks",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the webhooks in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to get webhooks for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of webhook objects"
                    }
                },
                {
                    "name": "getGuildAuditLogs",
                    "access": "",
                    "virtual": false,
                    "description": "Get the audit logs for a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to get audit logs for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of entries to return",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get entries before this entry ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "actionType",
                            "type": "Number",
                            "description": "Filter entries by action type",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with {users: Users[], entries: GuildAuditLogEntry[]}"
                    }
                },
                {
                    "name": "createGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Create a guild emoji object (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the emoji in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Emoji options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.image",
                            "type": "String",
                            "description": "The base 64 encoded string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array",
                            "description": "An array containing authorized role IDs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild emoji object"
                    }
                },
                {
                    "name": "editGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild emoji object (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to edit the emoji in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji you want to modify",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Emoji options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of emoji",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array",
                            "description": "An array containing authorized role IDs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild emoji object"
                    }
                },
                {
                    "name": "deleteGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild emoji object (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to delete the emoji in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "createRole",
                    "access": "",
                    "virtual": false,
                    "description": "Create a guild role",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the role in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to set",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the role",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissions",
                            "type": "Number",
                            "description": "The role permissions number",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.color",
                            "type": "Number",
                            "description": "The hex color of the role, in number form (ex: 0x3d15b3 or 4040115)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.hoist",
                            "type": "Boolean",
                            "description": "Whether to hoist the role in the user list or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mentionable",
                            "type": "Boolean",
                            "description": "Whether the role is mentionable or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Role>",
                        "description": ""
                    }
                },
                {
                    "name": "editRole",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild role",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild the role is in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the role",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissions",
                            "type": "Number",
                            "description": "The role permissions number",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.color",
                            "type": "Number",
                            "description": "The hex color of the role, in number form (ex: 0x3da5b3 or 4040115)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.hoist",
                            "type": "Boolean",
                            "description": "Whether to hoist the role in the user list or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mentionable",
                            "type": "Boolean",
                            "description": "Whether the role is mentionable or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Role>",
                        "description": ""
                    }
                },
                {
                    "name": "editRolePosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild role's position. Note that role position numbers are highest on top and lowest at the bottom.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild the role is in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteRole",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild role",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the role in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getPruneCount",
                    "access": "",
                    "virtual": false,
                    "description": "Get the prune count for a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "days",
                            "type": "Number",
                            "description": "The number of days of inactivity to prune for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of users that would be pruned"
                    }
                },
                {
                    "name": "pruneMembers",
                    "access": "",
                    "virtual": false,
                    "description": "Begin pruning a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "days",
                            "type": "Number",
                            "description": "The number of days of inactivity to prune for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of pruned users"
                    }
                },
                {
                    "name": "getVoiceRegions",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of general/guild-specific voice reigons",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of voice region objects"
                    }
                },
                {
                    "name": "getInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Get info on an invite",
                    "parameters": [
                        {
                            "name": "inviteID",
                            "type": "String",
                            "description": "The ID of the invite",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "withCounts",
                            "type": "Boolean",
                            "description": "Whether to fetch additional invite info or not (approximate member counts, approximate presences, channel counts, etc.)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "acceptInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Accept an invite (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "inviteID",
                            "type": "String",
                            "description": "The ID of the invite",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "deleteInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Delete an invite",
                    "parameters": [
                        {
                            "name": "inviteID",
                            "type": "String",
                            "description": "The ID of the invite",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getSelf",
                    "access": "",
                    "virtual": false,
                    "description": "Get properties of the bot user",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<ExtendedUser>",
                        "description": ""
                    }
                },
                {
                    "name": "editSelf",
                    "access": "",
                    "virtual": false,
                    "description": "Edit properties of the bot user",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.username",
                            "type": "String",
                            "description": "The new username",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.avatar",
                            "type": "String",
                            "description": "The new avatar as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<ExtendedUser>",
                        "description": ""
                    }
                },
                {
                    "name": "getDMChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a DM channel with a user, or create one if it does not exist",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PrivateChannel>",
                        "description": ""
                    }
                },
                {
                    "name": "createGroupChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Create a group channel with other users",
                    "parameters": [
                        {
                            "name": "userIDs",
                            "type": "Array.<String>",
                            "description": "The IDs of the other users",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PrivateChannel>",
                        "description": ""
                    }
                },
                {
                    "name": "getMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Get a previous message in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "getMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Get previous messages in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to get",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "around",
                            "type": "String",
                            "description": "Get messages around this message ID (does not work with limit > 100)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "getPins",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the pins in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "createMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Create a message in a channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel for a user",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.tts",
                            "type": "Boolean",
                            "description": "Set the message TTS flag",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file",
                            "type": [
                                "Object",
                                "Array.<Object>"
                            ],
                            "description": "A file object (or an Array of them)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file.file",
                            "type": "Buffer",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "editMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "pinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Pin a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unpinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Unpin a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of users who reacted with a specific reaction",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of users to get",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get users before this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get users after this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<User>>",
                        "description": ""
                    }
                },
                {
                    "name": "addMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Add a reaction to a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to react as",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a reaction from a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to remove the reaction for",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReactions",
                    "access": "",
                    "virtual": false,
                    "description": "Remove all reactions from a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Bulk delete messages (bot accounts only)",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageIDs",
                            "type": "Array.<String>",
                            "description": "Array of message IDs to delete",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "purgeChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Purge previous messages in a channel with an optional filter (bot accounts only)",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to search through, -1 for no limit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "filter",
                            "type": "function",
                            "description": "Optional filter function that returns a boolean when passed a Message object",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of messages deleted"
                    }
                },
                {
                    "name": "getGuildEmbed",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's embed object",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild embed object"
                    }
                },
                {
                    "name": "getGuildIntegrations",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of integrations for a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<GuildIntegration>>",
                        "description": ""
                    }
                },
                {
                    "name": "editGuildIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild integration",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.expireBehavior",
                            "type": "String",
                            "description": "What to do when a user's subscription runs out",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.expireGracePeriod",
                            "type": "String",
                            "description": "How long before the integration's role is removed from an unsubscribed user",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.enableEmoticons",
                            "type": "String",
                            "description": "Whether to enable integration emoticons or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteGuildIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild integration",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "syncGuildIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Force a guild integration to sync",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getGuildInvites",
                    "access": "",
                    "virtual": false,
                    "description": "Get all invites in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Invite>>",
                        "description": ""
                    }
                },
                {
                    "name": "banGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Ban a user from a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deleteMessageDays",
                            "type": "Number",
                            "description": "Number of days to delete messages for, between 0-7 inclusive",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unbanGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Unban a user from a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "createGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Create a guild",
                    "parameters": [
                        {
                            "name": "name",
                            "type": "String",
                            "description": "The name of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "region",
                            "type": "String",
                            "description": "The region of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "icon",
                            "type": "String",
                            "description": "The guild icon as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Guild>",
                        "description": ""
                    }
                },
                {
                    "name": "editGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.region",
                            "type": "String",
                            "description": "The region of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.icon",
                            "type": "String",
                            "description": "The guild icon as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.verificationLevel",
                            "type": "Number",
                            "description": "The guild verification level",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.defaultNotifications",
                            "type": "Number",
                            "description": "The default notification settings for the guild. 0 is \"All Messages\", 1 is \"Only @mentions\".",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.afkChannelID",
                            "type": "String",
                            "description": "The ID of the AFK voice channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.afkTimeout",
                            "type": "Number",
                            "description": "The AFK timeout in seconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.ownerID",
                            "type": "String",
                            "description": "The ID of the user to transfer server ownership to (bot user must be owner)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.splash",
                            "type": "String",
                            "description": "The guild splash image as a base64 data URI (VIP only). Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Guild>",
                        "description": ""
                    }
                },
                {
                    "name": "getGuildBans",
                    "access": "",
                    "virtual": false,
                    "description": "Get the ban list of a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of {reason: String, user: User}"
                    }
                },
                {
                    "name": "editGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild member",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array.<String>",
                            "description": "The array of role IDs the member should have",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.nick",
                            "type": "String",
                            "description": "Set the member's server nickname, \"\" to remove",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mute",
                            "type": "Boolean",
                            "description": "Server mute the member",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.deaf",
                            "type": "Boolean",
                            "description": "Server deafen the member",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.channelID",
                            "type": "String",
                            "description": "The ID of the voice channel to move the member to (must be in voice)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "addGuildMemberRole",
                    "access": "",
                    "virtual": false,
                    "description": "Add a role to a guild member",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeGuildMemberRole",
                    "access": "",
                    "virtual": false,
                    "description": "Remve a role from a guild member",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editNickname",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the bot's nickname in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "nick",
                            "type": "String",
                            "description": "The nickname",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "kickGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Kick a user from a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild (bot user must be owner)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "leaveGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Leave a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getOAuthApplication",
                    "access": "",
                    "virtual": false,
                    "description": "Get data on an OAuth2 application",
                    "parameters": [
                        {
                            "name": "appID",
                            "type": "String",
                            "description": "The client ID of the application to get data for. \"@me\" refers to the logged in user's own application",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The bot's application data. Refer to [the official Discord API documentation entry](https://discordapp.com/developers/docs/topics/oauth2#get-current-application-information) for object structure"
                    }
                },
                {
                    "name": "addRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Create a relationship with a user",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "block",
                            "type": "Boolean",
                            "description": "If true, block the user. Otherwise, add the user as a friend",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a relationship with a user",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "addGroupRecipient",
                    "access": "",
                    "virtual": false,
                    "description": "Add a user to a group",
                    "parameters": [
                        {
                            "name": "groupID",
                            "type": "String",
                            "description": "The ID of the target group",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeGroupRecipient",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a user from a group",
                    "parameters": [
                        {
                            "name": "groupID",
                            "type": "String",
                            "description": "The ID of the target group",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getUserProfile",
                    "access": "",
                    "virtual": false,
                    "description": "Get profile data for a user (user accounts only)",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's profile data."
                    }
                },
                {
                    "name": "editUserNote",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the current user's note for another user (user accounts only)",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "note",
                            "type": "String",
                            "description": "The note",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteUserNote",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the current user's note for another user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getSelfConnections",
                    "access": "",
                    "virtual": false,
                    "description": "Get the connections for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's connections"
                    }
                },
                {
                    "name": "editSelfConnection",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a connection for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "platform",
                            "type": "String",
                            "description": "The connection platform (e.g. \"twitch\", \"reddit\")",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "id",
                            "type": "String",
                            "description": "The connection ID",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "data",
                            "type": "Object",
                            "description": "The connection data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSync",
                            "type": "Boolean",
                            "description": "Whether to sync friends from the connection or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.visibility",
                            "type": "Number",
                            "description": "The visibility level for the connection. 0 = hidden, 1 = shown on profile",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The updated connection data"
                    }
                },
                {
                    "name": "deleteSelfConnection",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a connection for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "platform",
                            "type": "String",
                            "description": "The connection platform (e.g. \"twitch\", \"reddit\")",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "id",
                            "type": "String",
                            "description": "The connection ID",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getSelfSettings",
                    "access": "",
                    "virtual": false,
                    "description": "Get settings for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's settings data."
                    }
                },
                {
                    "name": "editSelfSettings",
                    "access": "",
                    "virtual": false,
                    "description": "Edit settings for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "data",
                            "type": "Object",
                            "description": "The user settings data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "data.convertEmoticons",
                            "type": "Boolean",
                            "description": "Whether to convert emoticons or not (e.g. :D => 😄)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.detectPlatformAccounts",
                            "type": "Boolean",
                            "description": "Whether to automatically detect accounts from other platforms or not (Blizzard, Skype, etc.)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.developerMode",
                            "type": "Boolean",
                            "description": "Whether to enable developer mode or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.enableTTSCommand",
                            "type": "Boolean",
                            "description": "Whether to respect usage of the TTS command or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags",
                            "type": "Object",
                            "description": "An object representing allowed friend request sources",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags.all",
                            "type": "Boolean",
                            "description": "Whether to allow friends requests from anywhere or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags.mutualFriends",
                            "type": "Boolean",
                            "description": "Whether to allow friend requests from people with mutual friends or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags.mutualGuilds",
                            "type": "Boolean",
                            "description": "Whether to allow friend requests from people in mutual guilds or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.guildPositions",
                            "type": "Array.<String>",
                            "description": "An ordered array of guild IDs representing the guild list order in the Discord client",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.inlineAttachmentMedia",
                            "type": "Boolean",
                            "description": "Whether to show attachment previews or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.inlineEmbedMedia",
                            "type": "Boolean",
                            "description": "Whether to show embed images or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.locale",
                            "type": "String",
                            "description": "The locale to use for the Discord UI",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.messageDisplayCompact",
                            "type": "Boolean",
                            "description": "Whether to use compact mode or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.renderEmbeds",
                            "type": "Boolean",
                            "description": "Whether to show embeds or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.renderReactions",
                            "type": "Boolean",
                            "description": "Whether to show reactions or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.restrictedGuilds",
                            "type": "Array.<String>",
                            "description": "An array of guild IDs where direct messages from guild members are disallowed",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.showCurrentGame",
                            "type": "Boolean",
                            "description": "Whether to set the user's status to the current game or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.status",
                            "type": "String",
                            "description": "The status of the user, either \"invisible\", \"dnd\", \"away\", or \"online\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.theme",
                            "type": "String",
                            "description": "The theme to use for the Discord UI, either \"dark\" or \"light\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's settings data."
                    }
                },
                {
                    "name": "getSelfMFACodes",
                    "access": "",
                    "virtual": false,
                    "description": "Get the MFA backup codes for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "password",
                            "type": "String",
                            "description": "The password for the current user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "regenerate",
                            "type": "Boolean",
                            "description": "Whether to regenerate the MFA backup codes or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's MFA codes"
                    }
                },
                {
                    "name": "enableSelfMFATOTP",
                    "access": "",
                    "virtual": false,
                    "description": "Enable TOTP authentication for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "secret",
                            "type": "String",
                            "description": "The TOTP secret used to generate the auth code",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "code",
                            "type": "String",
                            "description": "The timed auth code for the current user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "An object containing the user's new authorization token and backup codes"
                    }
                },
                {
                    "name": "disableSelfMFATOTP",
                    "access": "",
                    "virtual": false,
                    "description": "Disable TOTP authentication for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "code",
                            "type": "String",
                            "description": "The timed auth code for the current user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "An object containing the user's new authorization token"
                    }
                },
                {
                    "name": "getSelfBilling",
                    "access": "",
                    "virtual": false,
                    "description": "Get the billing info for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's billing info"
                    }
                },
                {
                    "name": "getSelfPayments",
                    "access": "",
                    "virtual": false,
                    "description": "Get the payment history for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's payment history"
                    }
                },
                {
                    "name": "addSelfPremiumSubscription",
                    "access": "",
                    "virtual": false,
                    "description": "Purchase a premium subscription (Nitro) for the current user (user accounts only)\nYou must get a Stripe card token from the Stripe API for this to work",
                    "parameters": [
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The Stripe credit card token",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "plan",
                            "type": "String",
                            "description": "The plan to purchase, either \"premium_month\" or \"premium_year\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteSelfPremiumSubscription",
                    "access": "",
                    "virtual": false,
                    "description": "Cancel the premium subscription (Nitro) for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a channel's data via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|GroupChannel|PrivateChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's data via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Guild>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuilds",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of the user's guilds via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of guilds to get (1 to 1000)",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "The lowest guild ID of the next page",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "The highest guild ID of the previous page",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Guild>>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildChannels",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's channels via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(Array.<CategoryChannel>|Array.<TextChannel>|Array.<VoiceChannel>)>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildEmojis",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's emojis via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "An array of guild emoji objects"
                    }
                },
                {
                    "name": "getRESTGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild emoji via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "An emoji object"
                    }
                },
                {
                    "name": "getRESTGuildMembers",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's members via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of members to get (1 to 1000)",
                            "default": 1,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "The highest user ID of the previous page",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Member>>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's members via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Member>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildRoles",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's roles via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Role>>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTUser",
                    "access": "",
                    "virtual": false,
                    "description": "Get a user's data via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<User>",
                        "description": ""
                    }
                },
                {
                    "name": "searchChannelMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Search a channel's messages",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query",
                            "type": "Object",
                            "description": "Search parameters",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query.sortBy",
                            "type": "String",
                            "description": "What to sort by, either \"timestamp\" or \"relevance\"",
                            "default": "\"timestamp\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.sortOrder",
                            "type": "String",
                            "description": "What order to sort by, either \"asc\" or \"desc\"",
                            "default": "\"desc\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.content",
                            "type": "String",
                            "description": "Filter results by a content string",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.authorID",
                            "type": "String",
                            "description": "Filter results by an author ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.minID",
                            "type": "String",
                            "description": "The minimum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.maxID",
                            "type": "String",
                            "description": "The maximum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.limit",
                            "type": "Number",
                            "description": "How many messages to return, 1 <= limit <= 25",
                            "default": 25,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.offset",
                            "type": "Number",
                            "description": "The query index of the first message to be returned, 0 <= offset <= 5000",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.contextSize",
                            "type": "Number",
                            "description": "How many context messages around each result to return.\nFor example, if you searched for `6` and contextSize was 2, `[4, 5, 6, 7, 8]` would be returned",
                            "default": 2,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.has",
                            "type": "String",
                            "description": "Only return messages with an \"attachment\", \"embed\", or \"link\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedProviders",
                            "type": "String",
                            "description": "Filter results by embed provider",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedTypes",
                            "type": "String",
                            "description": "Filter results by embed type",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentExtensions",
                            "type": "String",
                            "description": "Filter results by attachment extension",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentFilename",
                            "type": "String",
                            "description": "Filter results by attachment filename",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A search result object. The object will have a `totalResults` key and `results` key.\nEach entry in the result array is an array of Message objects.\nIn each array, the message where `Message.hit === true` is the matched message, while the other messages are context messages.\nSample return: ```\n{\n    totalResults: 2,\n    results: [\n        [Message, Message, Message (Message.hit = true), Message],\n        [Message, Message, Message (Message.hit = true), Message, Message]\n    ]\n}\n```"
                    }
                },
                {
                    "name": "searchGuildMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Search a guild's messages",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query",
                            "type": "Object",
                            "description": "Search parameters",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query.sortBy",
                            "type": "String",
                            "description": "What to sort by, either \"timestamp\" or \"relevance\"",
                            "default": "\"timestamp\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.sortOrder",
                            "type": "String",
                            "description": "What order to sort by, either \"asc\" or \"desc\"",
                            "default": "\"desc\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.content",
                            "type": "String",
                            "description": "Filter results by a content string",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.authorID",
                            "type": "String",
                            "description": "Filter results by an author ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.minID",
                            "type": "String",
                            "description": "The minimum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.maxID",
                            "type": "String",
                            "description": "The maximum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.limit",
                            "type": "Number",
                            "description": "How many messages to return, 1 <= limit <= 25",
                            "default": 25,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.offset",
                            "type": "Number",
                            "description": "The query index of the first message to be returned, 0 <= offset <= 5000",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.contextSize",
                            "type": "Number",
                            "description": "How many context messages around each result to return.\nFor example, if you searched for `6` and contextSize was 2, `[4, 5, 6, 7, 8]` would be returned",
                            "default": 2,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.has",
                            "type": "String",
                            "description": "Only return messages with an \"attachment\", \"embed\", or \"link\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedProviders",
                            "type": "String",
                            "description": "Filter results by embed provider",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedTypes",
                            "type": "String",
                            "description": "Filter results by embed type",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentExtensions",
                            "type": "String",
                            "description": "Filter results by attachment extension",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentFilename",
                            "type": "String",
                            "description": "Filter results by attachment filename",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.channelIDs",
                            "type": "Array.<String>",
                            "description": "Filter results by channel ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A search result object. The object will have a `totalResults` key and `results` key.\nEach entry in the result array is an array of Message objects.\nIn each array, the message where `Message.hit === true` is the matched message, while the other messages are context messages.\nSample return: ```\n{\n    totalResults: 2,\n    results: [\n        [Message, Message, Message (Message.hit = true), Message],\n        [Message, Message, Message (Message.hit = true), Message, Message]\n    ]\n}\n```"
                    }
                }
            ],
            "events": [
                {
                    "name": "error",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard encounters an error",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "debug",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when stuff happens and gives more info",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "userUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user's username or avatar changes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "presenceUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member or relationship's status or game changes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceChannelSwitch",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member switches voice channels",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceChannelJoin",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member joins a voice channel. This event is not fired when a member switches voice channels, see `voiceChannelSwitch`",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceChannelLeave",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member leaves a voice channel. This event is not fired when a member switches voice channels, see `voiceChannelSwitch`",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceStateUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member's voice state changes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "typingStart",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user begins typing",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a message is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a message is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a cached message is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageDeleteBulk",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a bulk delete occurs",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageReactionAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when someone adds a reaction to a message",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageReactionRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when someone removes a reaction from a message",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageReactionRemoveAll",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when someone removes a reaction from a message",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a member joins a server",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a member's roles or nickname are updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a member leaves a server",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildAvailable",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild becomes available",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "unavailableGuildCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an unavailable guild is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildUnavailable",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild becomes unavailable",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildBanAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user is banned from a guild",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildBanRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user is unbanned from a guild",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildRoleCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild role is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildRoleUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild role is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildRoleDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild role is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a call is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a call is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a call is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelRecipientAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user joins a group channel",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelRecipientRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user leaves a group channel",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "friendSuggestionCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a client receives a friend suggestion",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "friendSuggestionDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a client's friend suggestion is removed for any reason",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberChunk",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when Discord sends member chunks",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardPreReady",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard finishes processing the ready packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "relationshipUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a relationship is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "relationshipAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a relationship is added",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "relationshipRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a relationship is removed",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildEmojisUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild's emojis are updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelPinUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel pin timestamp is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "unknown",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard encounters an unknown packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "connect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard establishes a connection",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "rawWS",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard receives a websocket packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "warn",
                    "access": "",
                    "virtual": false,
                    "description": "Fired to warn of something weird but non-breaking happening",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "hello",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard receives an OP:10/HELLO packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardReady",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard turns ready",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "ready",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when all shards turn ready",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardResume",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard resumes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardDisconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard disconnects",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "disconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when all shards disconnect",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callRing",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the bot user is rung in a call",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "Command",
            "description": "Represents an command framework command",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Command",
                "description": "Register a command",
                "parameters": [
                    {
                        "name": "label",
                        "type": "String",
                        "description": "The command label",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "generator",
                        "type": [
                            "function",
                            "String",
                            "Array.<(function()|String)>"
                        ],
                        "description": "A response string, array of functions or strings, or function that generates a string or array of strings when called.\nIf a function is passed, the function will be passed a Message object and an array of command arguments. The Message object will have an additional property `prefix`, which is the prefix used in the command.\n`generator(msg, args)`",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "options",
                        "type": "Object",
                        "description": "Command options",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.aliases",
                        "type": "Array.<String>",
                        "description": "An array of command aliases",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.caseInsensitive",
                        "type": "Boolean",
                        "description": "Whether the command label (and aliases) is case insensitive or not",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.deleteCommand",
                        "type": "Boolean",
                        "description": "Whether to delete the user command message or not",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.argsRequired",
                        "type": "Boolean",
                        "description": "If arguments are required or not",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.guildOnly",
                        "type": "Boolean",
                        "description": "Whether to prevent the command from being used in Direct Messages or not",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.dmOnly",
                        "type": "Boolean",
                        "description": "Whether to prevent the command from being used in guilds or not",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.description",
                        "type": "String",
                        "description": "A short description of the command to show in the default help command",
                        "default": "\"No description\"",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.fullDescription",
                        "type": "String",
                        "description": "A detailed description of the command to show in the default help command",
                        "default": "\"No full description\"",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.usage",
                        "type": "String",
                        "description": "Details on how to call the command to show in the default help command",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.requirements",
                        "type": "Object",
                        "description": "A set of factors that limit who can call the command",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.requirements.userIDs",
                        "type": [
                            "function",
                            "Array.<String>"
                        ],
                        "description": "An array or a function that returns an array of user IDs representing users that can call the command.  The function is passed the Message object as a parameter.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.requirements.permissions",
                        "type": [
                            "function",
                            "Object"
                        ],
                        "description": "An object or a function that returns an object containing permission keys the user must match to use the command.  The function is passed the Message object as a parameter.\ni.e.:\n```\n{\n  \"administrator\": false,\n  \"manageMessages\": true\n}\n```\nIn the above example, the user must not have administrator permissions, but must have manageMessages to use the command",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.requirements.roleIDs",
                        "type": [
                            "function",
                            "Array.<String>"
                        ],
                        "description": "An array or a function that returns an array of role IDs that would allow a user to use the command.  The function is passed the Message object as a parameter.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.requirements.roleNames",
                        "type": [
                            "function",
                            "Array.<String>"
                        ],
                        "description": "An array or a function that returns an array of role names that would allow a user to use the command.  The function is passed the Message object as a parameter.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.cooldown",
                        "type": "Number",
                        "description": "The cooldown between command usage in milliseconds",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.cooldownExclusions",
                        "type": "Object",
                        "description": "A set of factors that limit where cooldowns are active",
                        "default": "{}",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.cooldownExclusions.userIDs",
                        "type": "Array.<String>",
                        "description": "An array of user IDs representing users that are not affected by cooldowns.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.cooldownExclusions.guildIDs",
                        "type": "Array.<String>",
                        "description": "An array of guild IDs representing guilds that are not affected by cooldowns.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.cooldownExclusions.channelIDs",
                        "type": "Array.<String>",
                        "description": "An array of channel IDs representing channels that are not affected by cooldowns.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "option.restartCooldown",
                        "type": "Boolean",
                        "description": "Whether or not to restart a command's cooldown every time it's used.",
                        "default": false,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "option.cooldownReturns",
                        "type": "Number",
                        "description": "Number of times to return a message when the command is used during it's cooldown.  Once the cooldown expires this is reset.  Set this to 0 to always return a message.",
                        "default": 0,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.cooldownMessage",
                        "type": [
                            "function",
                            "String"
                        ],
                        "description": "A string or a function that returns a string to show when the command is on cooldown.  The function is passed the Message object as a parameter.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.invalidUsageMessage",
                        "type": [
                            "function",
                            "String"
                        ],
                        "description": "A string or a function that returns a string to show when a command was improperly used.  The function is passed the Message object as a parameter.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.permissionMessage",
                        "type": [
                            "function",
                            "String"
                        ],
                        "description": "A string or a function that returns a string to show when the user doesn't have permissions to use the command.  The function is passed the Message object as a parameter.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.errorMessage",
                        "type": [
                            "function",
                            "String"
                        ],
                        "description": "A string or a function that returns a string to show if the execution of the command handler somehow fails.  The function is passed the Message object as a parameter.",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.reactionButtons",
                        "type": "Array.<{emoji: String, type: String, response: (function()|String|Array.<(function()|String)>)}>",
                        "description": "An array of objects specifying reaction buttons\n`emoji` specifies the button emoji. Custom emojis should be in format `emojiName:emojiID`\n`type` specifies the type of the reaction button, either \"edit\" or \"cancel\"\n`response` specifies the content to edit the message to when the reaction button is pressed. This accepts the same arguments as the `generator` parameter of this function",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.reactionButtonTimeout",
                        "type": "Number",
                        "description": "Time (in milliseconds) to wait before invalidating the command's reaction buttons",
                        "default": 60000,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "options.defaultSubcommandOptions",
                        "type": "Object",
                        "description": "Default subcommand options. This object takes the same options as a normal Command",
                        "default": "{}",
                        "optional": true,
                        "nullable": ""
                    }
                ],
                "examples": []
            },
            "functions": [
                {
                    "name": "registerSubcommandAlias",
                    "access": "",
                    "virtual": false,
                    "description": "Register an alias for a subcommand",
                    "parameters": [
                        {
                            "name": "alias",
                            "type": "String",
                            "description": "The alias",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "label",
                            "type": "String",
                            "description": "The original subcommand label",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "registerSubcommand",
                    "access": "",
                    "virtual": false,
                    "description": "Register a subcommand",
                    "parameters": [
                        {
                            "name": "label",
                            "type": "String",
                            "description": "The subcommand label",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "generator",
                            "type": [
                                "function",
                                "String",
                                "Array.<(function()|String)>"
                            ],
                            "description": "A response string, array of functions or strings, or function that generates a string or array of strings when called.\nIf a function is passed, the function will be passed a Message object and an array of subcommand arguments. The Message object will have an additional property `prefix`, which is the prefix used in the subcommand.\n`generator(msg, args)`",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Command options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.aliases",
                            "type": "Array.<String>",
                            "description": "An array of subcommand aliases",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.caseInsensitive",
                            "type": "Boolean",
                            "description": "Whether the subcommand label (and aliases) is case insensitive or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.deleteCommand",
                            "type": "Boolean",
                            "description": "Whether to delete the user subcommand message or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.argsRequired",
                            "type": "Boolean",
                            "description": "If arguments are required or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.guildOnly",
                            "type": "Boolean",
                            "description": "Whether to prevent the subcommand from being used in Direct Messages or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.dmOnly",
                            "type": "Boolean",
                            "description": "Whether to prevent the subcommand from being used in guilds or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.description",
                            "type": "String",
                            "description": "A short description of the subcommand to show in the default help subcommand",
                            "default": "\"No description\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.fullDescription",
                            "type": "String",
                            "description": "A detailed description of the subcommand to show in the default help subcommand",
                            "default": "\"No full description\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.usage",
                            "type": "String",
                            "description": "Details on how to call the subcommand to show in the default help subcommand",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements",
                            "type": "Object",
                            "description": "A set of factors that limit who can call the subcommand",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.userIDs",
                            "type": [
                                "function",
                                "Array.<String>"
                            ],
                            "description": "An array or a function that returns an array of user IDs representing users that can call the subcommand",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.permissions",
                            "type": [
                                "function",
                                "Object"
                            ],
                            "description": "An object or a function that returns an object containing permission keys the user must match to use the subcommand\ni.e.:\n```\n{\n  \"administrator\": false,\n  \"manageMessages\": true\n}```\nIn the above example, the user must not have administrator permissions, but must have manageMessages to use the subcommand",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.roleIDs",
                            "type": [
                                "function",
                                "Array.<String>"
                            ],
                            "description": "An array or a function that returns an array of role IDs that would allow a user to use the subcommand",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.roleNames",
                            "type": [
                                "function",
                                "Array.<String>"
                            ],
                            "description": "An array or a function that returns an array of role names that would allow a user to use the subcommand",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldown",
                            "type": "Number",
                            "description": "The cooldown between subcommand usage in milliseconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "option.restartCooldown",
                            "type": "Boolean",
                            "description": "Whether or not to restart a command's cooldown every time it's used.",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "option.cooldownReturns",
                            "type": "Number",
                            "description": "Number of times to return a message when the command is used during it's cooldown.  Once the cooldown expires this is reset.  Set this to 0 to always return a message.",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldownMessage",
                            "type": [
                                "function",
                                "String"
                            ],
                            "description": "A string or a function that returns a string to show when the command is on cooldown.  The function is passed the Message object as a parameter.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.invalidUsageMessage",
                            "type": [
                                "function",
                                "String"
                            ],
                            "description": "A string or a function that returns a string to show when a command was improperly used.  The function is passed the Message object as a parameter.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissionMessage",
                            "type": [
                                "function",
                                "String"
                            ],
                            "description": "A string or a function that returns a string to show when the user doesn't have permissions to use the command.  The function is passed the Message object as a parameter.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.errorMessage",
                            "type": [
                                "function",
                                "String"
                            ],
                            "description": "A string or a function that returns a string to show if the execution of the command handler somehow fails.  The function is passed the Message object as a parameter.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.reactionButtons",
                            "type": "Array.<{emoji: String, type: String, response: (function()|String|Array.<(function()|String)>)}>",
                            "description": "An array of objects specifying reaction buttons\n`emoji` specifies the button emoji. Custom emojis should be in format `emojiName:emojiID`\n`type` specifies the type of the reaction button, either \"edit\" or \"cancel\"\n`response` specifies the content to edit the message to when the reaction button is pressed. This accepts the same arguments as the `generator` parameter of this function",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.reactionButtonTimeout",
                            "type": "Number",
                            "description": "Time (in milliseconds) to wait before invalidating the command's reaction buttons",
                            "default": 60000,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.defaultSubcommandOptions",
                            "type": "Object",
                            "description": "Default subcommand options. This object takes the same options as a normal Command",
                            "default": "{}",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Command",
                        "description": ""
                    }
                },
                {
                    "name": "unregisterSubcommand",
                    "access": "",
                    "virtual": false,
                    "description": "Unregister a subcommand",
                    "parameters": [
                        {
                            "name": "label",
                            "type": "String",
                            "description": "The subcommand label",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                }
            ]
        },
        {
            "name": "CommandClient",
            "description": "Represents an Eris client with the command framework",
            "extends": [
                "Client"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "CommandClient",
                "description": "Create a CommandClient",
                "parameters": [
                    {
                        "name": "token",
                        "type": "String",
                        "description": "bot token",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "options",
                        "type": "Object",
                        "description": "Eris options (same as Client)",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions",
                        "type": "Object",
                        "description": "Command options",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.defaultHelpCommand",
                        "type": "Boolean",
                        "description": "Whether to register the default help command or not",
                        "default": true,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.description",
                        "type": "String",
                        "description": "The description to show in the default help command",
                        "default": "\"An Eris-based Discord bot\"",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.ignoreBots",
                        "type": "Boolean",
                        "description": "Whether to ignore bot accounts or not",
                        "default": true,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.ignoreSelf",
                        "type": "Boolean",
                        "description": "Whether to ignore the bot's own account or not",
                        "default": true,
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.name",
                        "type": "String",
                        "description": "The bot name to show in the default help command",
                        "default": "\"<Bot username>\"",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.owner",
                        "type": "String",
                        "description": "The owner to show in the default help command",
                        "default": "\"an unknown user\"",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.prefix",
                        "type": [
                            "String",
                            "Array"
                        ],
                        "description": "The bot prefix. Can be either an array of prefixes or a single prefix. \"@mention\" will be automatically replaced with the bot's actual mention",
                        "default": "\"@mention \"",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "commandOptions.defaultCommandOptions",
                        "type": "Object",
                        "description": "Default command options. This object takes the same options as a normal Command",
                        "default": "{}",
                        "optional": true,
                        "nullable": ""
                    }
                ],
                "examples": []
            },
            "functions": [
                {
                    "name": "onMessageCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Checks the command client for a command based on the provided message",
                    "parameters": [
                        {
                            "name": "msg",
                            "type": "Message",
                            "description": "The message object from the message create event",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "registerGuildPrefix",
                    "access": "",
                    "virtual": false,
                    "description": "Register a prefix override for a specific guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to override prefixes for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "prefix",
                            "type": [
                                "String",
                                "Array"
                            ],
                            "description": "The bot prefix. Can be either an array of prefixes or a single prefix. \"@mention\" will be automatically replaced with the bot's actual mention",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "registerCommandAlias",
                    "access": "",
                    "virtual": false,
                    "description": "Register an alias for a command",
                    "parameters": [
                        {
                            "name": "alias",
                            "type": "String",
                            "description": "The alias",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "label",
                            "type": "String",
                            "description": "The original command label",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "registerCommand",
                    "access": "",
                    "virtual": false,
                    "description": "Register a command",
                    "parameters": [
                        {
                            "name": "label",
                            "type": "String",
                            "description": "The command label",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "generator",
                            "type": [
                                "function",
                                "String",
                                "Array.<(function()|String)>"
                            ],
                            "description": "A response string, array of functions or strings, or function that generates a string or array of strings when called.\nIf a function is passed, the function will be passed a Message object and an array of command arguments. The Message object will have an additional property `prefix`, which is the prefix used in the command.\n`generator(msg, args)`",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Command options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.aliases",
                            "type": "Array.<String>",
                            "description": "An array of command aliases",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.caseInsensitive",
                            "type": "Boolean",
                            "description": "Whether the command label (and aliases) is case insensitive or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.deleteCommand",
                            "type": "Boolean",
                            "description": "Whether to delete the user command message or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.argsRequired",
                            "type": "Boolean",
                            "description": "If arguments are required or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.guildOnly",
                            "type": "Boolean",
                            "description": "Whether to prevent the command from being used in Direct Messages or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.dmOnly",
                            "type": "Boolean",
                            "description": "Whether to prevent the command from being used in guilds or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.description",
                            "type": "String",
                            "description": "A short description of the command to show in the default help command",
                            "default": "\"No description\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.fullDescription",
                            "type": "String",
                            "description": "A detailed description of the command to show in the default help command",
                            "default": "\"No full description\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.usage",
                            "type": "String",
                            "description": "Details on how to call the command to show in the default help command",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements",
                            "type": "Object",
                            "description": "A set of factors that limit who can call the command",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.userIDs",
                            "type": "Array.<String>",
                            "description": "An array of user IDs representing users that can call the command",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.permissions",
                            "type": "Object",
                            "description": "An object containing permission keys the user must match to use the command\ni.e.:\n```\n{\n  \"administrator\": false,\n  \"manageMessages\": true\n}```\nIn the above example, the user must not have administrator permissions, but must have manageMessages to use the command",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.roleIDs",
                            "type": "Array.<String>",
                            "description": "An array of role IDs that would allow a user to use the command",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.requirements.roleNames",
                            "type": "Array.<String>",
                            "description": "An array of role names that would allow a user to use the command",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldown",
                            "type": "Number",
                            "description": "The cooldown between command usage in milliseconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldownExclusions",
                            "type": "Object",
                            "description": "A set of factors that limit where cooldowns are active",
                            "default": "{}",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldownExclusions.userIDs",
                            "type": "Array.<String>",
                            "description": "An array of user IDs representing users that are not affected by cooldowns.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldownExclusions.guildIDs",
                            "type": "Array.<String>",
                            "description": "An array of guild IDs representing guilds that are not affected by cooldowns.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldownExclusions.channelIDs",
                            "type": "Array.<String>",
                            "description": "An array of channel IDs representing channels that are not affected by cooldowns.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.cooldownMessage",
                            "type": "String",
                            "description": "A message to show when the command is on cooldown",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.invalidUsageMessage",
                            "type": "String",
                            "description": "A message to show when a command was improperly used",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissionMessage",
                            "type": "String",
                            "description": "A message to show when the user doesn't have permissions to use the command",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.errorMessage",
                            "type": "String",
                            "description": "A message to show if the execution of the command handler somehow fails.",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.reactionButtons",
                            "type": "Array.<{emoji: String, type: String, response: (function()|String|Array.<(function()|String)>)}>",
                            "description": "An array of objects specifying reaction buttons\n`emoji` specifies the button emoji. Custom emojis should be in format `emojiName:emojiID`\n`type` specifies the type of the reaction button, either \"edit\" or \"cancel\"\n`response` specifies the content to edit the message to when the reaction button is pressed. This accepts the same arguments as the `generator` parameter of this function",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.reactionButtonTimeout",
                            "type": "Number",
                            "description": "Time (in milliseconds) to wait before invalidating the command's reaction buttons",
                            "default": 60000,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.defaultSubcommandOptions",
                            "type": "Object",
                            "description": "Default subcommand options. This object takes the same options as a normal Command",
                            "default": "{}",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Command",
                        "description": ""
                    }
                },
                {
                    "name": "unregisterCommand",
                    "access": "",
                    "virtual": false,
                    "description": "Unregister a command",
                    "parameters": [
                        {
                            "name": "label",
                            "type": "String",
                            "description": "The command label",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "connect",
                    "access": "",
                    "virtual": false,
                    "description": "Tells all shards to connect.",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": "Resolves when all shards are initialized"
                    }
                },
                {
                    "name": "getGateway",
                    "access": "",
                    "virtual": false,
                    "description": "Get the Discord gateway URL",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<String>",
                        "description": "Resolves with the gateway URL"
                    }
                },
                {
                    "name": "getBotGateway",
                    "access": "",
                    "virtual": false,
                    "description": "Get the Discord gateway URL along with bot metadata",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with the gateway data"
                    }
                },
                {
                    "name": "disconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Disconnects all shards",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Shard disconnect options",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "options.reconnect",
                            "type": [
                                "String",
                                "Boolean"
                            ],
                            "description": "false means destroy everything, true means you want to reconnect in the future, \"auto\" will autoreconnect",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "joinVoiceChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Join a voice channel. If joining a group call, the voice connection ID will be stored in voiceConnections as \"call\". Otherwise, it will be the guild ID",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the voice channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "VoiceConnection constructor options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.shared",
                            "type": "Object",
                            "description": "Whether the VoiceConnection will be part of a SharedStream or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.opusOnly",
                            "type": "Object",
                            "description": "Skip opus encoder initialization. You should not enable this unless you know what you are doing",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<VoiceConnection>",
                        "description": "Resolves with a VoiceConnection"
                    }
                },
                {
                    "name": "leaveVoiceChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Leaves a voice channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the voice channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "editAFK",
                    "access": "",
                    "virtual": false,
                    "description": "Update the bot's AFK status. Setting this to true will enable push notifications for userbots.",
                    "parameters": [
                        {
                            "name": "afk",
                            "type": "Boolean",
                            "description": "Whether the bot user is AFK or not",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "editStatus",
                    "access": "",
                    "virtual": false,
                    "description": "Update the bot's status on all guilds",
                    "parameters": [
                        {
                            "name": "status",
                            "type": "String",
                            "description": "Sets the bot's status, either \"online\", \"idle\", \"dnd\", or \"invisible\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game",
                            "type": "Object",
                            "description": "Sets the bot's active game, null to clear",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game.name",
                            "type": "String",
                            "description": "Sets the name of the bot's active game",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "game.type",
                            "type": "Number",
                            "description": "The type of game. 0 is default, 1 is streaming (Twitch only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game.url",
                            "type": "String",
                            "description": "Sets the url of the shard's active game",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "getChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a Channel object from a channelID",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": [
                            "CategoryChannel",
                            "GroupChannel",
                            "PrivateChannel",
                            "TextChannel",
                            "VoiceChannel"
                        ],
                        "description": ""
                    }
                },
                {
                    "name": "createChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the channel in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The type of the channel, either 0 or 2",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "parentID",
                            "type": "String",
                            "description": "ID of the parent category for a channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a channel's properties",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.icon",
                            "type": "String",
                            "description": "The icon of the channel as a base64 data URI (group channels only). Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.ownerID",
                            "type": "String",
                            "description": "The ID of the channel owner (group channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.topic",
                            "type": "String",
                            "description": "The topic of the channel (guild text channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.nsfw",
                            "type": "Boolean",
                            "description": "The nsfw status of the channel (guild channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.bitrate",
                            "type": "Number",
                            "description": "The bitrate of the channel (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.userLimit",
                            "type": "Number",
                            "description": "The channel user limit (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.parentID",
                            "type": "String",
                            "description": "The ID of the parent channel category for this channel (guild text/voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|GroupChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editChannelPosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild channel's position. Note that channel position numbers are lowest on top and highest at the bottom.",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild channel, or leave a private or group channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "sendChannelTyping",
                    "access": "",
                    "virtual": false,
                    "description": "Send typing status in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editChannelPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role (everyone role ID = guild ID)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "allow",
                            "type": "Number",
                            "description": "The permissions number for allowed permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deny",
                            "type": "Number",
                            "description": "The permissions number for denied permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The object type of the overwrite, either \"member\" or \"role\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteChannelPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getChannelInvites",
                    "access": "",
                    "virtual": false,
                    "description": "Get all invites in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Invite>>",
                        "description": ""
                    }
                },
                {
                    "name": "createChannelInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Create an invite for a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Invite generation options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxAge",
                            "type": "Number",
                            "description": "How long the invite should last in seconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxUses",
                            "type": "Number",
                            "description": "How many uses the invite should last for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.temporary",
                            "type": "Boolean",
                            "description": "Whether the invite is temporary or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.unique",
                            "type": "Boolean",
                            "description": "Whether the invite is unique or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "getChannelWebhooks",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the webhooks in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel to get webhooks for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of webhook objects"
                    }
                },
                {
                    "name": "getWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Get a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook, used instead of the Bot Authorization token",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with a webhook object"
                    }
                },
                {
                    "name": "createChannelWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel webhook",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel to create the webhook in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Webhook options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The default name",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.avatar",
                            "type": "String",
                            "description": "The default avatar as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with a webhook object"
                    }
                },
                {
                    "name": "editWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Webhook options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The new default name",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.avatar",
                            "type": "String",
                            "description": "The new default avatar as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook, used instead of the Bot Authorization token",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with a webhook object"
                    }
                },
                {
                    "name": "executeWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Execute a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Webhook execution options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "\"\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.file",
                            "type": [
                                "Object",
                                "Array.<Object>"
                            ],
                            "description": "A file object (or an Array of them)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.file.file",
                            "type": "Buffer",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.embeds",
                            "type": "Array.<Object>",
                            "description": "An array of Discord embeds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.username",
                            "type": "String",
                            "description": "A custom username, defaults to webhook default username if not specified",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.avatarURL",
                            "type": "String",
                            "description": "A URL for a custom avatar, defaults to webhook default avatar if not specified",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.tts",
                            "type": "Boolean",
                            "description": "Whether the message should be a TTS message or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.wait",
                            "type": "Boolean",
                            "description": "Whether to wait for the server to confirm the message create or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "executeSlackWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Execute a slack-style webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Slack webhook options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.wait",
                            "type": "Boolean",
                            "description": "Whether to wait for the server to confirm the message create or not",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a webhook",
                    "parameters": [
                        {
                            "name": "webhookID",
                            "type": "String",
                            "description": "The ID of the webhook",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The token of the webhook, used instead of the Bot Authorization token",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getGuildWebhooks",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the webhooks in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to get webhooks for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of webhook objects"
                    }
                },
                {
                    "name": "getGuildAuditLogs",
                    "access": "",
                    "virtual": false,
                    "description": "Get the audit logs for a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to get audit logs for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of entries to return",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get entries before this entry ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "actionType",
                            "type": "Number",
                            "description": "Filter entries by action type",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with {users: Users[], entries: GuildAuditLogEntry[]}"
                    }
                },
                {
                    "name": "createGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Create a guild emoji object (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the emoji in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Emoji options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.image",
                            "type": "String",
                            "description": "The base 64 encoded string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array",
                            "description": "An array containing authorized role IDs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild emoji object"
                    }
                },
                {
                    "name": "editGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild emoji object (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to edit the emoji in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji you want to modify",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Emoji options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of emoji",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array",
                            "description": "An array containing authorized role IDs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild emoji object"
                    }
                },
                {
                    "name": "deleteGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild emoji object (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to delete the emoji in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "createRole",
                    "access": "",
                    "virtual": false,
                    "description": "Create a guild role",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the role in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to set",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the role",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissions",
                            "type": "Number",
                            "description": "The role permissions number",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.color",
                            "type": "Number",
                            "description": "The hex color of the role, in number form (ex: 0x3d15b3 or 4040115)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.hoist",
                            "type": "Boolean",
                            "description": "Whether to hoist the role in the user list or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mentionable",
                            "type": "Boolean",
                            "description": "Whether the role is mentionable or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Role>",
                        "description": ""
                    }
                },
                {
                    "name": "editRole",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild role",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild the role is in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the role",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissions",
                            "type": "Number",
                            "description": "The role permissions number",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.color",
                            "type": "Number",
                            "description": "The hex color of the role, in number form (ex: 0x3da5b3 or 4040115)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.hoist",
                            "type": "Boolean",
                            "description": "Whether to hoist the role in the user list or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mentionable",
                            "type": "Boolean",
                            "description": "Whether the role is mentionable or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Role>",
                        "description": ""
                    }
                },
                {
                    "name": "editRolePosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild role's position. Note that role position numbers are highest on top and lowest at the bottom.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild the role is in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteRole",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild role",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild to create the role in",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getPruneCount",
                    "access": "",
                    "virtual": false,
                    "description": "Get the prune count for a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "days",
                            "type": "Number",
                            "description": "The number of days of inactivity to prune for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of users that would be pruned"
                    }
                },
                {
                    "name": "pruneMembers",
                    "access": "",
                    "virtual": false,
                    "description": "Begin pruning a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "days",
                            "type": "Number",
                            "description": "The number of days of inactivity to prune for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of pruned users"
                    }
                },
                {
                    "name": "getVoiceRegions",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of general/guild-specific voice reigons",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of voice region objects"
                    }
                },
                {
                    "name": "getInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Get info on an invite",
                    "parameters": [
                        {
                            "name": "inviteID",
                            "type": "String",
                            "description": "The ID of the invite",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "withCounts",
                            "type": "Boolean",
                            "description": "Whether to fetch additional invite info or not (approximate member counts, approximate presences, channel counts, etc.)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "acceptInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Accept an invite (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "inviteID",
                            "type": "String",
                            "description": "The ID of the invite",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "deleteInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Delete an invite",
                    "parameters": [
                        {
                            "name": "inviteID",
                            "type": "String",
                            "description": "The ID of the invite",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getSelf",
                    "access": "",
                    "virtual": false,
                    "description": "Get properties of the bot user",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<ExtendedUser>",
                        "description": ""
                    }
                },
                {
                    "name": "editSelf",
                    "access": "",
                    "virtual": false,
                    "description": "Edit properties of the bot user",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.username",
                            "type": "String",
                            "description": "The new username",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.avatar",
                            "type": "String",
                            "description": "The new avatar as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<ExtendedUser>",
                        "description": ""
                    }
                },
                {
                    "name": "getDMChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a DM channel with a user, or create one if it does not exist",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PrivateChannel>",
                        "description": ""
                    }
                },
                {
                    "name": "createGroupChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Create a group channel with other users",
                    "parameters": [
                        {
                            "name": "userIDs",
                            "type": "Array.<String>",
                            "description": "The IDs of the other users",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PrivateChannel>",
                        "description": ""
                    }
                },
                {
                    "name": "getMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Get a previous message in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "getMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Get previous messages in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to get",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "around",
                            "type": "String",
                            "description": "Get messages around this message ID (does not work with limit > 100)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "getPins",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the pins in a channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "createMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Create a message in a channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel for a user",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.tts",
                            "type": "Boolean",
                            "description": "Set the message TTS flag",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file",
                            "type": [
                                "Object",
                                "Array.<Object>"
                            ],
                            "description": "A file object (or an Array of them)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file.file",
                            "type": "Buffer",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "editMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "pinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Pin a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unpinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Unpin a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of users who reacted with a specific reaction",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of users to get",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get users before this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get users after this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<User>>",
                        "description": ""
                    }
                },
                {
                    "name": "addMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Add a reaction to a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to react as",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a reaction from a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to remove the reaction for",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReactions",
                    "access": "",
                    "virtual": false,
                    "description": "Remove all reactions from a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a message",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Bulk delete messages (bot accounts only)",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "messageIDs",
                            "type": "Array.<String>",
                            "description": "Array of message IDs to delete",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "purgeChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Purge previous messages in a channel with an optional filter (bot accounts only)",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to search through, -1 for no limit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "filter",
                            "type": "function",
                            "description": "Optional filter function that returns a boolean when passed a Message object",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of messages deleted"
                    }
                },
                {
                    "name": "getGuildEmbed",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's embed object",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild embed object"
                    }
                },
                {
                    "name": "getGuildIntegrations",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of integrations for a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<GuildIntegration>>",
                        "description": ""
                    }
                },
                {
                    "name": "editGuildIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild integration",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.expireBehavior",
                            "type": "String",
                            "description": "What to do when a user's subscription runs out",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.expireGracePeriod",
                            "type": "String",
                            "description": "How long before the integration's role is removed from an unsubscribed user",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.enableEmoticons",
                            "type": "String",
                            "description": "Whether to enable integration emoticons or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteGuildIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild integration",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "syncGuildIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Force a guild integration to sync",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getGuildInvites",
                    "access": "",
                    "virtual": false,
                    "description": "Get all invites in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Invite>>",
                        "description": ""
                    }
                },
                {
                    "name": "banGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Ban a user from a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deleteMessageDays",
                            "type": "Number",
                            "description": "Number of days to delete messages for, between 0-7 inclusive",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unbanGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Unban a user from a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "createGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Create a guild",
                    "parameters": [
                        {
                            "name": "name",
                            "type": "String",
                            "description": "The name of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "region",
                            "type": "String",
                            "description": "The region of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "icon",
                            "type": "String",
                            "description": "The guild icon as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Guild>",
                        "description": ""
                    }
                },
                {
                    "name": "editGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.region",
                            "type": "String",
                            "description": "The region of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.icon",
                            "type": "String",
                            "description": "The guild icon as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.verificationLevel",
                            "type": "Number",
                            "description": "The guild verification level",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.defaultNotifications",
                            "type": "Number",
                            "description": "The default notification settings for the guild. 0 is \"All Messages\", 1 is \"Only @mentions\".",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.afkChannelID",
                            "type": "String",
                            "description": "The ID of the AFK voice channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.afkTimeout",
                            "type": "Number",
                            "description": "The AFK timeout in seconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.ownerID",
                            "type": "String",
                            "description": "The ID of the user to transfer server ownership to (bot user must be owner)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.splash",
                            "type": "String",
                            "description": "The guild splash image as a base64 data URI (VIP only). Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Guild>",
                        "description": ""
                    }
                },
                {
                    "name": "getGuildBans",
                    "access": "",
                    "virtual": false,
                    "description": "Get the ban list of a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of {reason: String, user: User}"
                    }
                },
                {
                    "name": "editGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild member",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array.<String>",
                            "description": "The array of role IDs the member should have",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.nick",
                            "type": "String",
                            "description": "Set the member's server nickname, \"\" to remove",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mute",
                            "type": "Boolean",
                            "description": "Server mute the member",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.deaf",
                            "type": "Boolean",
                            "description": "Server deafen the member",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.channelID",
                            "type": "String",
                            "description": "The ID of the voice channel to move the member to (must be in voice)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "addGuildMemberRole",
                    "access": "",
                    "virtual": false,
                    "description": "Add a role to a guild member",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeGuildMemberRole",
                    "access": "",
                    "virtual": false,
                    "description": "Remve a role from a guild member",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editNickname",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the bot's nickname in a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "nick",
                            "type": "String",
                            "description": "The nickname",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "kickGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Kick a user from a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild (bot user must be owner)",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "leaveGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Leave a guild",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getOAuthApplication",
                    "access": "",
                    "virtual": false,
                    "description": "Get data on an OAuth2 application",
                    "parameters": [
                        {
                            "name": "appID",
                            "type": "String",
                            "description": "The client ID of the application to get data for. \"@me\" refers to the logged in user's own application",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The bot's application data. Refer to [the official Discord API documentation entry](https://discordapp.com/developers/docs/topics/oauth2#get-current-application-information) for object structure"
                    }
                },
                {
                    "name": "addRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Create a relationship with a user",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "block",
                            "type": "Boolean",
                            "description": "If true, block the user. Otherwise, add the user as a friend",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a relationship with a user",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "addGroupRecipient",
                    "access": "",
                    "virtual": false,
                    "description": "Add a user to a group",
                    "parameters": [
                        {
                            "name": "groupID",
                            "type": "String",
                            "description": "The ID of the target group",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeGroupRecipient",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a user from a group",
                    "parameters": [
                        {
                            "name": "groupID",
                            "type": "String",
                            "description": "The ID of the target group",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getUserProfile",
                    "access": "",
                    "virtual": false,
                    "description": "Get profile data for a user (user accounts only)",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's profile data."
                    }
                },
                {
                    "name": "editUserNote",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the current user's note for another user (user accounts only)",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "note",
                            "type": "String",
                            "description": "The note",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteUserNote",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the current user's note for another user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getSelfConnections",
                    "access": "",
                    "virtual": false,
                    "description": "Get the connections for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's connections"
                    }
                },
                {
                    "name": "editSelfConnection",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a connection for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "platform",
                            "type": "String",
                            "description": "The connection platform (e.g. \"twitch\", \"reddit\")",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "id",
                            "type": "String",
                            "description": "The connection ID",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "data",
                            "type": "Object",
                            "description": "The connection data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSync",
                            "type": "Boolean",
                            "description": "Whether to sync friends from the connection or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.visibility",
                            "type": "Number",
                            "description": "The visibility level for the connection. 0 = hidden, 1 = shown on profile",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The updated connection data"
                    }
                },
                {
                    "name": "deleteSelfConnection",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a connection for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "platform",
                            "type": "String",
                            "description": "The connection platform (e.g. \"twitch\", \"reddit\")",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "id",
                            "type": "String",
                            "description": "The connection ID",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getSelfSettings",
                    "access": "",
                    "virtual": false,
                    "description": "Get settings for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's settings data."
                    }
                },
                {
                    "name": "editSelfSettings",
                    "access": "",
                    "virtual": false,
                    "description": "Edit settings for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "data",
                            "type": "Object",
                            "description": "The user settings data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "data.convertEmoticons",
                            "type": "Boolean",
                            "description": "Whether to convert emoticons or not (e.g. :D => 😄)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.detectPlatformAccounts",
                            "type": "Boolean",
                            "description": "Whether to automatically detect accounts from other platforms or not (Blizzard, Skype, etc.)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.developerMode",
                            "type": "Boolean",
                            "description": "Whether to enable developer mode or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.enableTTSCommand",
                            "type": "Boolean",
                            "description": "Whether to respect usage of the TTS command or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags",
                            "type": "Object",
                            "description": "An object representing allowed friend request sources",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags.all",
                            "type": "Boolean",
                            "description": "Whether to allow friends requests from anywhere or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags.mutualFriends",
                            "type": "Boolean",
                            "description": "Whether to allow friend requests from people with mutual friends or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.friendSourceFlags.mutualGuilds",
                            "type": "Boolean",
                            "description": "Whether to allow friend requests from people in mutual guilds or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.guildPositions",
                            "type": "Array.<String>",
                            "description": "An ordered array of guild IDs representing the guild list order in the Discord client",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.inlineAttachmentMedia",
                            "type": "Boolean",
                            "description": "Whether to show attachment previews or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.inlineEmbedMedia",
                            "type": "Boolean",
                            "description": "Whether to show embed images or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.locale",
                            "type": "String",
                            "description": "The locale to use for the Discord UI",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.messageDisplayCompact",
                            "type": "Boolean",
                            "description": "Whether to use compact mode or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.renderEmbeds",
                            "type": "Boolean",
                            "description": "Whether to show embeds or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.renderReactions",
                            "type": "Boolean",
                            "description": "Whether to show reactions or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.restrictedGuilds",
                            "type": "Array.<String>",
                            "description": "An array of guild IDs where direct messages from guild members are disallowed",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.showCurrentGame",
                            "type": "Boolean",
                            "description": "Whether to set the user's status to the current game or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.status",
                            "type": "String",
                            "description": "The status of the user, either \"invisible\", \"dnd\", \"away\", or \"online\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "data.theme",
                            "type": "String",
                            "description": "The theme to use for the Discord UI, either \"dark\" or \"light\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's settings data."
                    }
                },
                {
                    "name": "getSelfMFACodes",
                    "access": "",
                    "virtual": false,
                    "description": "Get the MFA backup codes for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "password",
                            "type": "String",
                            "description": "The password for the current user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "regenerate",
                            "type": "Boolean",
                            "description": "Whether to regenerate the MFA backup codes or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's MFA codes"
                    }
                },
                {
                    "name": "enableSelfMFATOTP",
                    "access": "",
                    "virtual": false,
                    "description": "Enable TOTP authentication for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "secret",
                            "type": "String",
                            "description": "The TOTP secret used to generate the auth code",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "code",
                            "type": "String",
                            "description": "The timed auth code for the current user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "An object containing the user's new authorization token and backup codes"
                    }
                },
                {
                    "name": "disableSelfMFATOTP",
                    "access": "",
                    "virtual": false,
                    "description": "Disable TOTP authentication for the current user (user accounts only)",
                    "parameters": [
                        {
                            "name": "code",
                            "type": "String",
                            "description": "The timed auth code for the current user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "An object containing the user's new authorization token"
                    }
                },
                {
                    "name": "getSelfBilling",
                    "access": "",
                    "virtual": false,
                    "description": "Get the billing info for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's billing info"
                    }
                },
                {
                    "name": "getSelfPayments",
                    "access": "",
                    "virtual": false,
                    "description": "Get the payment history for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's payment history"
                    }
                },
                {
                    "name": "addSelfPremiumSubscription",
                    "access": "",
                    "virtual": false,
                    "description": "Purchase a premium subscription (Nitro) for the current user (user accounts only)\nYou must get a Stripe card token from the Stripe API for this to work",
                    "parameters": [
                        {
                            "name": "token",
                            "type": "String",
                            "description": "The Stripe credit card token",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "plan",
                            "type": "String",
                            "description": "The plan to purchase, either \"premium_month\" or \"premium_year\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteSelfPremiumSubscription",
                    "access": "",
                    "virtual": false,
                    "description": "Cancel the premium subscription (Nitro) for the current user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a channel's data via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|GroupChannel|PrivateChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuild",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's data via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Guild>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuilds",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of the user's guilds via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of guilds to get (1 to 1000)",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "The lowest guild ID of the next page",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "The highest guild ID of the previous page",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Guild>>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildChannels",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's channels via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(Array.<CategoryChannel>|Array.<TextChannel>|Array.<VoiceChannel>)>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildEmojis",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's emojis via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "An array of guild emoji objects"
                    }
                },
                {
                    "name": "getRESTGuildEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild emoji via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "An emoji object"
                    }
                },
                {
                    "name": "getRESTGuildMembers",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's members via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of members to get (1 to 1000)",
                            "default": 1,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "The highest user ID of the previous page",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Member>>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildMember",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's members via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Member>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTGuildRoles",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's roles via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Role>>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTUser",
                    "access": "",
                    "virtual": false,
                    "description": "Get a user's data via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<User>",
                        "description": ""
                    }
                },
                {
                    "name": "searchChannelMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Search a channel's messages",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query",
                            "type": "Object",
                            "description": "Search parameters",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query.sortBy",
                            "type": "String",
                            "description": "What to sort by, either \"timestamp\" or \"relevance\"",
                            "default": "\"timestamp\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.sortOrder",
                            "type": "String",
                            "description": "What order to sort by, either \"asc\" or \"desc\"",
                            "default": "\"desc\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.content",
                            "type": "String",
                            "description": "Filter results by a content string",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.authorID",
                            "type": "String",
                            "description": "Filter results by an author ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.minID",
                            "type": "String",
                            "description": "The minimum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.maxID",
                            "type": "String",
                            "description": "The maximum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.limit",
                            "type": "Number",
                            "description": "How many messages to return, 1 <= limit <= 25",
                            "default": 25,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.offset",
                            "type": "Number",
                            "description": "The query index of the first message to be returned, 0 <= offset <= 5000",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.contextSize",
                            "type": "Number",
                            "description": "How many context messages around each result to return.\nFor example, if you searched for `6` and contextSize was 2, `[4, 5, 6, 7, 8]` would be returned",
                            "default": 2,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.has",
                            "type": "String",
                            "description": "Only return messages with an \"attachment\", \"embed\", or \"link\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedProviders",
                            "type": "String",
                            "description": "Filter results by embed provider",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedTypes",
                            "type": "String",
                            "description": "Filter results by embed type",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentExtensions",
                            "type": "String",
                            "description": "Filter results by attachment extension",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentFilename",
                            "type": "String",
                            "description": "Filter results by attachment filename",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A search result object. The object will have a `totalResults` key and `results` key.\nEach entry in the result array is an array of Message objects.\nIn each array, the message where `Message.hit === true` is the matched message, while the other messages are context messages.\nSample return: ```\n{\n    totalResults: 2,\n    results: [\n        [Message, Message, Message (Message.hit = true), Message],\n        [Message, Message, Message (Message.hit = true), Message, Message]\n    ]\n}\n```"
                    }
                },
                {
                    "name": "searchGuildMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Search a guild's messages",
                    "parameters": [
                        {
                            "name": "guildID",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query",
                            "type": "Object",
                            "description": "Search parameters",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "query.sortBy",
                            "type": "String",
                            "description": "What to sort by, either \"timestamp\" or \"relevance\"",
                            "default": "\"timestamp\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.sortOrder",
                            "type": "String",
                            "description": "What order to sort by, either \"asc\" or \"desc\"",
                            "default": "\"desc\"",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.content",
                            "type": "String",
                            "description": "Filter results by a content string",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.authorID",
                            "type": "String",
                            "description": "Filter results by an author ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.minID",
                            "type": "String",
                            "description": "The minimum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.maxID",
                            "type": "String",
                            "description": "The maximum message ID to return results for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.limit",
                            "type": "Number",
                            "description": "How many messages to return, 1 <= limit <= 25",
                            "default": 25,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.offset",
                            "type": "Number",
                            "description": "The query index of the first message to be returned, 0 <= offset <= 5000",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.contextSize",
                            "type": "Number",
                            "description": "How many context messages around each result to return.\nFor example, if you searched for `6` and contextSize was 2, `[4, 5, 6, 7, 8]` would be returned",
                            "default": 2,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.has",
                            "type": "String",
                            "description": "Only return messages with an \"attachment\", \"embed\", or \"link\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedProviders",
                            "type": "String",
                            "description": "Filter results by embed provider",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.embedTypes",
                            "type": "String",
                            "description": "Filter results by embed type",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentExtensions",
                            "type": "String",
                            "description": "Filter results by attachment extension",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.attachmentFilename",
                            "type": "String",
                            "description": "Filter results by attachment filename",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "query.channelIDs",
                            "type": "Array.<String>",
                            "description": "Filter results by channel ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A search result object. The object will have a `totalResults` key and `results` key.\nEach entry in the result array is an array of Message objects.\nIn each array, the message where `Message.hit === true` is the matched message, while the other messages are context messages.\nSample return: ```\n{\n    totalResults: 2,\n    results: [\n        [Message, Message, Message (Message.hit = true), Message],\n        [Message, Message, Message (Message.hit = true), Message, Message]\n    ]\n}\n```"
                    }
                }
            ],
            "events": [
                {
                    "name": "error",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard encounters an error",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "debug",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when stuff happens and gives more info",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "userUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user's username or avatar changes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "presenceUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member or relationship's status or game changes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceChannelSwitch",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member switches voice channels",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceChannelJoin",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member joins a voice channel. This event is not fired when a member switches voice channels, see `voiceChannelSwitch`",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceChannelLeave",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member leaves a voice channel. This event is not fired when a member switches voice channels, see `voiceChannelSwitch`",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "voiceStateUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild member's voice state changes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "typingStart",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user begins typing",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a message is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a message is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a cached message is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageDeleteBulk",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a bulk delete occurs",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageReactionAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when someone adds a reaction to a message",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageReactionRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when someone removes a reaction from a message",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "messageReactionRemoveAll",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when someone removes a reaction from a message",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a member joins a server",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a member's roles or nickname are updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a member leaves a server",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildAvailable",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild becomes available",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "unavailableGuildCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an unavailable guild is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildUnavailable",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild becomes unavailable",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when an guild is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildBanAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user is banned from a guild",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildBanRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user is unbanned from a guild",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildRoleCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild role is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildRoleUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild role is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildRoleDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild role is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a call is created",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a call is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a call is deleted",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelRecipientAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user joins a group channel",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelRecipientRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user leaves a group channel",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "friendSuggestionCreate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a client receives a friend suggestion",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "friendSuggestionDelete",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a client's friend suggestion is removed for any reason",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildMemberChunk",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when Discord sends member chunks",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardPreReady",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard finishes processing the ready packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "relationshipUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a relationship is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "relationshipAdd",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a relationship is added",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "relationshipRemove",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a relationship is removed",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "guildEmojisUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a guild's emojis are updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "channelPinUpdate",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a channel pin timestamp is updated",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "unknown",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard encounters an unknown packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "connect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard establishes a connection",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "rawWS",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard receives a websocket packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "warn",
                    "access": "",
                    "virtual": false,
                    "description": "Fired to warn of something weird but non-breaking happening",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "hello",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard receives an OP:10/HELLO packet",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardReady",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard turns ready",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "ready",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when all shards turn ready",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardResume",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard resumes",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "shardDisconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard disconnects",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "disconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when all shards disconnect",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "callRing",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the bot user is rung in a call",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "Shard",
            "description": "Represents a shard",
            "extends": [
                "EventEmitter"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Shard",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "connect",
                    "access": "",
                    "virtual": false,
                    "description": "Tells the shard to connect",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "disconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Disconnects the shard",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Shard disconnect options",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "options.reconnect",
                            "type": [
                                "String",
                                "Boolean"
                            ],
                            "description": "false means destroy everything, true means you want to reconnect in the future, \"auto\" will autoreconnect",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "editAFK",
                    "access": "",
                    "virtual": false,
                    "description": "Update the bot's AFK status. Setting this to true will enable push notifications for userbots.",
                    "parameters": [
                        {
                            "name": "afk",
                            "type": "Boolean",
                            "description": "Whether the bot user is AFK or not",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "editStatus",
                    "access": "",
                    "virtual": false,
                    "description": "Updates the bot's status on all guilds the shard is in",
                    "parameters": [
                        {
                            "name": "status",
                            "type": "String",
                            "description": "Sets the bot's status, either \"online\", \"idle\", \"dnd\", or \"invisible\"",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game",
                            "type": "Object",
                            "description": "Sets the bot's active game, null to clear",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game.name",
                            "type": "String",
                            "description": "Sets the name of the bot's active game",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "game.type",
                            "type": "Number",
                            "description": "The type of game. 0 is default, 1 is streaming (Twitch only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "game.url",
                            "type": "String",
                            "description": "Sets the url of the shard's active game",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                }
            ],
            "events": [
                {
                    "name": "disconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard disconnects",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "resume",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a shard finishes resuming",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "ready",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shard turns ready",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "RequestHandler",
            "description": "Handles API requests",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "RequestHandler",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "request",
                    "access": "",
                    "virtual": false,
                    "description": "Make an API request",
                    "parameters": [
                        {
                            "name": "method",
                            "type": "String",
                            "description": "Uppercase HTTP method",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "url",
                            "type": "String",
                            "description": "URL of the endpoint",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "auth",
                            "type": "Boolean",
                            "description": "Whether to add the Authorization header and token or not",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "body",
                            "type": "Object",
                            "description": "Request payload",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file",
                            "type": "Object",
                            "description": "File object",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file.file",
                            "type": "String",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with the returned JSON data"
                    }
                }
            ]
        },
        {
            "name": "Call",
            "description": "Represents a call",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Call",
                "description": "",
                "parameters": [],
                "examples": []
            }
        },
        {
            "name": "CategoryChannel",
            "description": "Represents a guild category channel",
            "extends": [
                "GuildChannel"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "CategoryChannel",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "permissionsOf",
                    "access": "",
                    "virtual": false,
                    "description": "Get the channel-specific permissions of a member",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Permission",
                        "description": ""
                    }
                },
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's properties",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.topic",
                            "type": "String",
                            "description": "The topic of the channel (guild text channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.bitrate",
                            "type": "Number",
                            "description": "The bitrate of the channel (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.userLimit",
                            "type": "Number",
                            "description": "The channel user limit (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.parentID",
                            "type": "Number",
                            "description": "The ID of the parent channel category for this channel (guild text/voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editPosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's position. Note that channel position numbers are lowest on top and highest at the bottom.",
                    "parameters": [
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the channel",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "allow",
                            "type": "Number",
                            "description": "The permissions number for allowed permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deny",
                            "type": "Number",
                            "description": "The permissions number for denied permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The object type of the overwrite, either \"member\" or \"role\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PermissionOverwrite>",
                        "description": ""
                    }
                },
                {
                    "name": "deletePermission",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "Channel",
            "description": "Represents a channel. You also probably want to look at CategoryChannel, GroupChannel, PrivateChannel, TextChannel, and VoiceChannel.",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Channel",
                "description": "",
                "parameters": [],
                "examples": []
            }
        },
        {
            "name": "ExtendedUser",
            "description": "Represents an extended user",
            "extends": [
                "User"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "ExtendedUser",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "dynamicAvatarURL",
                    "access": "",
                    "virtual": false,
                    "description": "Get the user's avatar with the given format and size",
                    "parameters": [
                        {
                            "name": "format",
                            "type": "String",
                            "description": "The filetype of the avatar (\"jpg\", \"png\", \"gif\", or \"webp\")",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "size",
                            "type": "Number",
                            "description": "The size of the avatar (128, 256, 512, 1024, 2048)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "getDMChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a DM channel with the user, or create one if it does not exist",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PrivateChannel>",
                        "description": ""
                    }
                },
                {
                    "name": "addRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Create a relationship with the user (user accounts only)",
                    "parameters": [
                        {
                            "name": "block",
                            "type": "Boolean",
                            "description": "If true, block the user. Otherwise, add the user as a friend",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a relationship with the user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getProfile",
                    "access": "",
                    "virtual": false,
                    "description": "Get profile data for the user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's profile data."
                    }
                },
                {
                    "name": "editNote",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the current user's note for the user (user accounts only)",
                    "parameters": [
                        {
                            "name": "note",
                            "type": "String",
                            "description": "The note",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteNote",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the current user's note for another user (user accounts only)",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "GroupChannel",
            "description": "Represents a group channel. See PrivateChannel docs for additional properties.",
            "extends": [
                "PrivateChannel"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "GroupChannel",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's properties",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.icon",
                            "type": "String",
                            "description": "The icon of the channel as a base64 data URI (group channels only). Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.ownerID",
                            "type": "String",
                            "description": "The ID of the channel owner (group channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<GroupChannel>",
                        "description": ""
                    }
                },
                {
                    "name": "addRecipient",
                    "access": "",
                    "virtual": false,
                    "description": "Add a user to the group",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeRecipient",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a user from the group",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the target user",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "dynamicIconURL",
                    "access": "",
                    "virtual": false,
                    "description": "Get the group's icon with the given format and size",
                    "parameters": [
                        {
                            "name": "format",
                            "type": "String",
                            "description": "The filetype of the icon (\"jpg\", \"png\", \"gif\", or \"webp\")",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "size",
                            "type": "Number",
                            "description": "The size of the icon (128, 256, 512, 1024, 2048)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "ring",
                    "access": "",
                    "virtual": false,
                    "description": "Ring fellow group channel recipient(s)",
                    "parameters": [
                        {
                            "name": "recipients",
                            "type": "Array.<String>",
                            "description": "The IDs of the recipients to ring",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "syncCall",
                    "access": "",
                    "virtual": false,
                    "description": "Check if the channel has an existing call",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "leave",
                    "access": "",
                    "virtual": false,
                    "description": "Leave the channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "sendTyping",
                    "access": "",
                    "virtual": false,
                    "description": "Send typing status in a text channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Get a previous message in a text channel",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "getMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Get a previous message in a text channel",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to get",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "around",
                            "type": "String",
                            "description": "Get messages around this message ID (does not work with limit > 100)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "getPins",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the pins in a text channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "createMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Create a message in a text channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user",
                    "parameters": [
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Object"
                            ],
                            "description": "A string or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.tts",
                            "type": "Boolean",
                            "description": "Set the message TTS flag",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file",
                            "type": "Object",
                            "description": "A file object",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file.file",
                            "type": "String",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "editMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "pinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Pin a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unpinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Unpin a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of users who reacted with a specific reaction",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of users to get",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get users before this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get users after this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<User>>",
                        "description": ""
                    }
                },
                {
                    "name": "addMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Add a reaction to a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to react as",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a reaction from a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to remove the reaction for",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReactions",
                    "access": "",
                    "virtual": false,
                    "description": "Remove all reactions from a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unsendMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Un-send a message. You're welcome Programmix",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "Guild",
            "description": "Represents a guild",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Guild",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "fetchAllMembers",
                    "access": "",
                    "virtual": false,
                    "description": "Request all guild members from Discord",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "dynamicIconURL",
                    "access": "",
                    "virtual": false,
                    "description": "Get the guild's icon with the given format and size",
                    "parameters": [
                        {
                            "name": "format",
                            "type": "String",
                            "description": "The filetype of the icon (\"jpg\", \"png\", \"gif\", or \"webp\")",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "size",
                            "type": "Number",
                            "description": "The size of the icon (128, 256, 512, 1024, 2048)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "createChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel in the guild",
                    "parameters": [
                        {
                            "name": "name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The type of the channel, either 0 or 2",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "parentID",
                            "type": "String",
                            "description": "ID of the parent category for a channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "createEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Create a emoji in the guild (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Emoji options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.image",
                            "type": "String",
                            "description": "The base 64 encoded string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array",
                            "description": "An array containing authorized role IDs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild emoji object"
                    }
                },
                {
                    "name": "editEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a emoji in the guild (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji you want to modify",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Emoji options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of emoji",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array",
                            "description": "An array containing authorized role IDs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild emoji object"
                    }
                },
                {
                    "name": "deleteEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a emoji in the guild (not for bot accounts)",
                    "parameters": [
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "createRole",
                    "access": "",
                    "virtual": false,
                    "description": "Create a guild role",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to set",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the role",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissions",
                            "type": "Number",
                            "description": "The role permissions number",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.color",
                            "type": "Number",
                            "description": "The hex color of the role, in number form (ex: 0x3d15b3 or 4040115)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.hoist",
                            "type": "Boolean",
                            "description": "Whether to hoist the role in the user list or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mentionable",
                            "type": "Boolean",
                            "description": "Whether the role is mentionable or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Role>",
                        "description": ""
                    }
                },
                {
                    "name": "getPruneCount",
                    "access": "",
                    "virtual": false,
                    "description": "Get the prune count for the guild",
                    "parameters": [
                        {
                            "name": "days",
                            "type": "Number",
                            "description": "The number of days of inactivity to prune for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of users that would be pruned"
                    }
                },
                {
                    "name": "pruneMembers",
                    "access": "",
                    "virtual": false,
                    "description": "Begin pruning the guild",
                    "parameters": [
                        {
                            "name": "days",
                            "type": "Number",
                            "description": "The number of days of inactivity to prune for",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of pruned users"
                    }
                },
                {
                    "name": "getRESTChannels",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's channels via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(Array.<CategoryChannel>|Array.<TextChannel>|Array.<VoiceChannel>)>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTEmojis",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's emojis via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "An array of guild emoji objects"
                    }
                },
                {
                    "name": "getRESTEmoji",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild emoji via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "emojiID",
                            "type": "String",
                            "description": "The ID of the emoji",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "An emoji object"
                    }
                },
                {
                    "name": "getRESTMembers",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's members via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of members to get (1 to 1000)",
                            "default": 1,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "The highest user ID of the previous page",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Member>>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTMember",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's members via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Member>",
                        "description": ""
                    }
                },
                {
                    "name": "getRESTRoles",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's roles via the REST API. REST mode is required to use this endpoint.",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Role>>",
                        "description": ""
                    }
                },
                {
                    "name": "getEmbed",
                    "access": "",
                    "virtual": false,
                    "description": "Get a guild's embed object",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "A guild embed object"
                    }
                },
                {
                    "name": "getVoiceRegions",
                    "access": "",
                    "virtual": false,
                    "description": "Get possible voice reigons for a guild",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of voice region objects"
                    }
                },
                {
                    "name": "editRole",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the guild role",
                    "parameters": [
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the role",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissions",
                            "type": "Number",
                            "description": "The role permissions number",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.color",
                            "type": "Number",
                            "description": "The hex color of the role, in number form (ex: 0x3da5b3 or 4040115)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.hoist",
                            "type": "Boolean",
                            "description": "Whether to hoist the role in the user list or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mentionable",
                            "type": "Boolean",
                            "description": "Whether the role is mentionable or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Role>",
                        "description": ""
                    }
                },
                {
                    "name": "deleteRole",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a role",
                    "parameters": [
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getAuditLogs",
                    "access": "",
                    "virtual": false,
                    "description": "Get the audit logs for a guild",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of entries to return",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get entries before this entry ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "actionType",
                            "type": "Number",
                            "description": "Filter entries by action type",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with an Object containing `users` and `audit_log_entries` keys"
                    }
                },
                {
                    "name": "getIntegrations",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of integrations for the guild",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<GuildIntegration>>",
                        "description": ""
                    }
                },
                {
                    "name": "editIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild integration",
                    "parameters": [
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.expireBehavior",
                            "type": "String",
                            "description": "What to do when a user's subscription runs out",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.expireGracePeriod",
                            "type": "String",
                            "description": "How long before the integration's role is removed from an unsubscribed user",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.enableEmoticons",
                            "type": "String",
                            "description": "Whether to enable integration emoticons or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "syncIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Force a guild integration to sync",
                    "parameters": [
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteIntegration",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a guild integration",
                    "parameters": [
                        {
                            "name": "integrationID",
                            "type": "String",
                            "description": "The ID of the integration",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getInvites",
                    "access": "",
                    "virtual": false,
                    "description": "Get all invites in the guild",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Invite>>",
                        "description": ""
                    }
                },
                {
                    "name": "editMember",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a guild member",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array.<String>",
                            "description": "The array of role IDs the member should have",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.nick",
                            "type": "String",
                            "description": "Set the member's guild nickname, \"\" to remove",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mute",
                            "type": "Boolean",
                            "description": "Server mute the member",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.deaf",
                            "type": "Boolean",
                            "description": "Server deafen the member",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.channelID",
                            "type": "String",
                            "description": "The ID of the voice channel to move the member to (must be in voice)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "addMemberRole",
                    "access": "",
                    "virtual": false,
                    "description": "Add a role to a guild member",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMemberRole",
                    "access": "",
                    "virtual": false,
                    "description": "Remve a role from a guild member",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "kickMember",
                    "access": "",
                    "virtual": false,
                    "description": "Kick a member from the guild",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "banMember",
                    "access": "",
                    "virtual": false,
                    "description": "Ban a user from the guild",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deleteMessageDays",
                            "type": "Number",
                            "description": "Number of days to delete messages for",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "Reason for the ban",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unbanMember",
                    "access": "",
                    "virtual": false,
                    "description": "Unban a user from the guild",
                    "parameters": [
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the guild",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The ID of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.region",
                            "type": "String",
                            "description": "The region of the guild",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.icon",
                            "type": "String",
                            "description": "The guild icon as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.verificationLevel",
                            "type": "Number",
                            "description": "The guild verification level",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.defaultNotifications",
                            "type": "Number",
                            "description": "The default notification settings for the guild. 0 is \"All Messages\", 1 is \"Only @mentions\".",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.afkChannelID",
                            "type": "String",
                            "description": "The ID of the AFK voice channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.afkTimeout",
                            "type": "Number",
                            "description": "The AFK timeout in seconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.ownerID",
                            "type": "String",
                            "description": "The ID of the member to transfer guild ownership to (bot user must be owner)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.splash",
                            "type": "String",
                            "description": "The guild splash image as a base64 data URI (VIP only). Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Guild>",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the guild (bot user must be owner)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "leave",
                    "access": "",
                    "virtual": false,
                    "description": "Leave the guild",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getBans",
                    "access": "",
                    "virtual": false,
                    "description": "Get the ban list of the guild",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<User>>",
                        "description": ""
                    }
                },
                {
                    "name": "editNickname",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the bot's nickname in the guild",
                    "parameters": [
                        {
                            "name": "nick",
                            "type": "String",
                            "description": "The nickname",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getWebhooks",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the webhooks in the guild",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of webhook objects"
                    }
                }
            ]
        },
        {
            "name": "GuildAuditLogEntry",
            "description": "Represents a guild audit log entry describing a moderation action",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "GuildAuditLogEntry",
                "description": "",
                "parameters": [],
                "examples": []
            }
        },
        {
            "name": "GuildChannel",
            "description": "Represents a guild channel. You also probably want to look at CategoryChannel, TextChannel, and VoiceChannel.",
            "extends": [
                "Channel"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "GuildChannel",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "permissionsOf",
                    "access": "",
                    "virtual": false,
                    "description": "Get the channel-specific permissions of a member",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Permission",
                        "description": ""
                    }
                },
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's properties",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.topic",
                            "type": "String",
                            "description": "The topic of the channel (guild text channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.bitrate",
                            "type": "Number",
                            "description": "The bitrate of the channel (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.userLimit",
                            "type": "Number",
                            "description": "The channel user limit (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.parentID",
                            "type": "Number",
                            "description": "The ID of the parent channel category for this channel (guild text/voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editPosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's position. Note that channel position numbers are lowest on top and highest at the bottom.",
                    "parameters": [
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the channel",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "allow",
                            "type": "Number",
                            "description": "The permissions number for allowed permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deny",
                            "type": "Number",
                            "description": "The permissions number for denied permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The object type of the overwrite, either \"member\" or \"role\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PermissionOverwrite>",
                        "description": ""
                    }
                },
                {
                    "name": "deletePermission",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "GuildIntegration",
            "description": "Represents a guild integration",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "GuildIntegration",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the guild integration",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.expireBehavior",
                            "type": "String",
                            "description": "What to do when a user's subscription runs out",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.expireGracePeriod",
                            "type": "String",
                            "description": "How long before the integration's role is removed from an unsubscribed user",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.enableEmoticons",
                            "type": "String",
                            "description": "Whether to enable integration emoticons or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the guild integration",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "sync",
                    "access": "",
                    "virtual": false,
                    "description": "Force the guild integration to sync",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "Invite",
            "description": "Represents an invite. The nullable properties will be null if the bot user does not have manage channel or manage server permissions for the invite's channel/server.",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Invite",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the invite",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "Member",
            "description": "Represents a server member",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Member",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the guild member",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.roles",
                            "type": "Array.<String>",
                            "description": "The array of role IDs the user should have",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.nick",
                            "type": "String",
                            "description": "Set the user's server nickname, \"\" to remove",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mute",
                            "type": "Boolean",
                            "description": "Server mute the user",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.deaf",
                            "type": "Boolean",
                            "description": "Server deafen the user",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.channelID",
                            "type": "String",
                            "description": "The ID of the voice channel to move the user to (must be in voice)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "addRole",
                    "access": "",
                    "virtual": false,
                    "description": "Add a role to the guild member",
                    "parameters": [
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeRole",
                    "access": "",
                    "virtual": false,
                    "description": "Remve a role from the guild member",
                    "parameters": [
                        {
                            "name": "roleID",
                            "type": "String",
                            "description": "The ID of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "kick",
                    "access": "",
                    "virtual": false,
                    "description": "Kick the member from the guild",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "ban",
                    "access": "",
                    "virtual": false,
                    "description": "Ban the user from the guild",
                    "parameters": [
                        {
                            "name": "deleteMessageDays",
                            "type": "Number",
                            "description": "Number of days to delete messages for",
                            "default": 0,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unban",
                    "access": "",
                    "virtual": false,
                    "description": "Unban the user from the guild",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "Message",
            "description": "Represents a message",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Message",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the message",
                    "parameters": [
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "pin",
                    "access": "",
                    "virtual": false,
                    "description": "Pin the message",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unpin",
                    "access": "",
                    "virtual": false,
                    "description": "Unpin the message",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of users who reacted with a specific reaction",
                    "parameters": [
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of users to get",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get users before this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get users after this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<User>>",
                        "description": ""
                    }
                },
                {
                    "name": "addReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Add a reaction to a message",
                    "parameters": [
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to react as",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a reaction from a message",
                    "parameters": [
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to remove the reaction for",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeReactions",
                    "access": "",
                    "virtual": false,
                    "description": "Remove all reactions from a message",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the message",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "Permission",
            "description": "Represents a calculated permissions number",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Permission",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "has",
                    "access": "",
                    "virtual": false,
                    "description": "Check if this permission allows a specific permission",
                    "parameters": [
                        {
                            "name": "permission",
                            "type": "String",
                            "description": "The name of the permission. [A full list of permission nodes can be found on the docs reference page](/Eris/docs/reference)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Boolean",
                        "description": "Whether the permission allows the specified permission"
                    }
                }
            ]
        },
        {
            "name": "PermissionOverwrite",
            "description": "Represents a permission overwrite",
            "extends": [
                "Permission"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "PermissionOverwrite",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "has",
                    "access": "",
                    "virtual": false,
                    "description": "Check if this permission allows a specific permission",
                    "parameters": [
                        {
                            "name": "permission",
                            "type": "String",
                            "description": "The name of the permission. [A full list of permission nodes can be found on the docs reference page](/Eris/docs/reference)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Boolean",
                        "description": "Whether the permission allows the specified permission"
                    }
                }
            ]
        },
        {
            "name": "PrivateChannel",
            "description": "Represents a private channel",
            "extends": [
                "Channel"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "PrivateChannel",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "ring",
                    "access": "",
                    "virtual": false,
                    "description": "Ring fellow group channel recipient(s)",
                    "parameters": [
                        {
                            "name": "recipients",
                            "type": "Array.<String>",
                            "description": "The IDs of the recipients to ring",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "syncCall",
                    "access": "",
                    "virtual": false,
                    "description": "Check if the channel has an existing call",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "leave",
                    "access": "",
                    "virtual": false,
                    "description": "Leave the channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "sendTyping",
                    "access": "",
                    "virtual": false,
                    "description": "Send typing status in a text channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Get a previous message in a text channel",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "getMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Get a previous message in a text channel",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to get",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "around",
                            "type": "String",
                            "description": "Get messages around this message ID (does not work with limit > 100)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "getPins",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the pins in a text channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "createMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Create a message in a text channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user",
                    "parameters": [
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Object"
                            ],
                            "description": "A string or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.tts",
                            "type": "Boolean",
                            "description": "Set the message TTS flag",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file",
                            "type": "Object",
                            "description": "A file object",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file.file",
                            "type": "String",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "editMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "pinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Pin a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unpinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Unpin a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of users who reacted with a specific reaction",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of users to get",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get users before this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get users after this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<User>>",
                        "description": ""
                    }
                },
                {
                    "name": "addMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Add a reaction to a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to react as",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a reaction from a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to remove the reaction for",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReactions",
                    "access": "",
                    "virtual": false,
                    "description": "Remove all reactions from a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unsendMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Un-send a message. You're welcome Programmix",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "Relationship",
            "description": "Represents a Relationship",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Relationship",
                "description": "",
                "parameters": [],
                "examples": []
            }
        },
        {
            "name": "Role",
            "description": "Represents a role",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Role",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "properties": [
                {
                    "name": "json",
                    "access": "",
                    "virtual": false,
                    "description": "Generates a JSON representation of the role permissions",
                    "type": ""
                }
            ],
            "functions": [
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the guild role",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the role",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.permissions",
                            "type": "Number",
                            "description": "The role permissions number",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.color",
                            "type": "Number",
                            "description": "The hex color of the role, in number form (ex: 0x3da5b3 or 4040115)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.hoist",
                            "type": "Boolean",
                            "description": "Whether to hoist the role in the user list or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.mentionable",
                            "type": "Boolean",
                            "description": "Whether the role is mentionable or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Role>",
                        "description": ""
                    }
                },
                {
                    "name": "editPosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the role's position. Note that role position numbers are highest on top and lowest at the bottom.",
                    "parameters": [
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the role",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "TextChannel",
            "description": "Represents a guild text channel",
            "extends": [
                "GuildChannel"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "TextChannel",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "getInvites",
                    "access": "",
                    "virtual": false,
                    "description": "Get all invites in the channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Invite>>",
                        "description": ""
                    }
                },
                {
                    "name": "createInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Create an invite for the channel",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Invite generation options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxAge",
                            "type": "Number",
                            "description": "How long the invite should last in seconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxUses",
                            "type": "Number",
                            "description": "How many uses the invite should last for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.temporary",
                            "type": "Boolean",
                            "description": "Whether the invite is temporary or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "getWebhooks",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the webhooks in the channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Object>>",
                        "description": "Resolves with an array of webhook objects"
                    }
                },
                {
                    "name": "createWebhook",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel webhook",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Webhook options",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The default name",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.avatar",
                            "type": "String",
                            "description": "The default avatar as a base64 data URI. Note: base64 strings alone are not base64 data URI strings",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "Resolves with a webhook object"
                    }
                },
                {
                    "name": "deleteMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Bulk delete messages (bot accounts only)",
                    "parameters": [
                        {
                            "name": "messageIDs",
                            "type": "Array.<String>",
                            "description": "Array of message IDs to delete",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "purge",
                    "access": "",
                    "virtual": false,
                    "description": "Purge previous messages in the channel with an optional filter (bot accounts only)",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to search through, -1 for no limit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "filter",
                            "type": "function",
                            "description": "Optional filter function that returns a boolean when passed a Message object",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Number>",
                        "description": "Resolves with the number of messages deleted"
                    }
                },
                {
                    "name": "sendTyping",
                    "access": "",
                    "virtual": false,
                    "description": "Send typing status in the channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Get a previous message in the channel",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "getMessages",
                    "access": "",
                    "virtual": false,
                    "description": "Get previous messages in the channel",
                    "parameters": [
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The max number of messages to get",
                            "default": 50,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get messages before this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get messages after this message ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "around",
                            "type": "String",
                            "description": "Get messages around this message ID (does not work with limit > 100)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "getPins",
                    "access": "",
                    "virtual": false,
                    "description": "Get all the pins in the channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Message>>",
                        "description": ""
                    }
                },
                {
                    "name": "createMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Create a message in the channel\nNote: If you want to DM someone, the user ID is **not** the DM channel ID. use Client.getDMChannel() to get the DM channel ID for a user",
                    "parameters": [
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Object"
                            ],
                            "description": "A string or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.tts",
                            "type": "Boolean",
                            "description": "Set the message TTS flag",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file",
                            "type": "Object",
                            "description": "A file object",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "file.file",
                            "type": "String",
                            "description": "A buffer containing file data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "file.name",
                            "type": "String",
                            "description": "What to name the file",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "editMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Edit a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content",
                            "type": [
                                "String",
                                "Array",
                                "Object"
                            ],
                            "description": "A string, array of strings, or object. If an object is passed:",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.content",
                            "type": "String",
                            "description": "A content string",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "content.disableEveryone",
                            "type": "Boolean",
                            "description": "Whether to filter @everyone/@here or not (overrides default)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "content.embed",
                            "type": "Object",
                            "description": "An embed object. See [the official Discord API documentation entry](https://discordapp.com/developers/docs/resources/channel#embed-object) for object structure",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Message>",
                        "description": ""
                    }
                },
                {
                    "name": "pinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Pin a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unpinMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Unpin a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Get a list of users who reacted with a specific reaction",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "limit",
                            "type": "Number",
                            "description": "The maximum number of users to get",
                            "default": 100,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "before",
                            "type": "String",
                            "description": "Get users before this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "after",
                            "type": "String",
                            "description": "Get users after this user ID",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<User>>",
                        "description": ""
                    }
                },
                {
                    "name": "addMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Add a reaction to a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to react as",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReaction",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a reaction from a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reaction",
                            "type": "String",
                            "description": "The reaction (Unicode string if Unicode emoji, `emojiName:emojiID` if custom emoji)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "userID",
                            "type": "String",
                            "description": "The ID of the user to remove the reaction for",
                            "default": "\"@me\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeMessageReactions",
                    "access": "",
                    "virtual": false,
                    "description": "Remove all reactions from a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a message",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "unsendMessage",
                    "access": "",
                    "virtual": false,
                    "description": "Un-send a message. You're welcome Programmix",
                    "parameters": [
                        {
                            "name": "messageID",
                            "type": "String",
                            "description": "The ID of the message",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "permissionsOf",
                    "access": "",
                    "virtual": false,
                    "description": "Get the channel-specific permissions of a member",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Permission",
                        "description": ""
                    }
                },
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's properties",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.topic",
                            "type": "String",
                            "description": "The topic of the channel (guild text channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.bitrate",
                            "type": "Number",
                            "description": "The bitrate of the channel (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.userLimit",
                            "type": "Number",
                            "description": "The channel user limit (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.parentID",
                            "type": "Number",
                            "description": "The ID of the parent channel category for this channel (guild text/voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editPosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's position. Note that channel position numbers are lowest on top and highest at the bottom.",
                    "parameters": [
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the channel",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "allow",
                            "type": "Number",
                            "description": "The permissions number for allowed permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deny",
                            "type": "Number",
                            "description": "The permissions number for denied permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The object type of the overwrite, either \"member\" or \"role\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PermissionOverwrite>",
                        "description": ""
                    }
                },
                {
                    "name": "deletePermission",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "UnavailableGuild",
            "description": "Represents a guild",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "UnavailableGuild",
                "description": "",
                "parameters": [],
                "examples": []
            }
        },
        {
            "name": "User",
            "description": "Represents a user",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "User",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "dynamicAvatarURL",
                    "access": "",
                    "virtual": false,
                    "description": "Get the user's avatar with the given format and size",
                    "parameters": [
                        {
                            "name": "format",
                            "type": "String",
                            "description": "The filetype of the avatar (\"jpg\", \"png\", \"gif\", or \"webp\")",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "size",
                            "type": "Number",
                            "description": "The size of the avatar (128, 256, 512, 1024, 2048)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "getDMChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Get a DM channel with the user, or create one if it does not exist",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PrivateChannel>",
                        "description": ""
                    }
                },
                {
                    "name": "addRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Create a relationship with the user (user accounts only)",
                    "parameters": [
                        {
                            "name": "block",
                            "type": "Boolean",
                            "description": "If true, block the user. Otherwise, add the user as a friend",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "removeRelationship",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a relationship with the user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "getProfile",
                    "access": "",
                    "virtual": false,
                    "description": "Get profile data for the user (user accounts only)",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Object>",
                        "description": "The user's profile data."
                    }
                },
                {
                    "name": "editNote",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the current user's note for the user (user accounts only)",
                    "parameters": [
                        {
                            "name": "note",
                            "type": "String",
                            "description": "The note",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "deleteNote",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the current user's note for another user (user accounts only)",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "VoiceChannel",
            "description": "Represents a guild voice channel",
            "extends": [
                "GuildChannel"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "VoiceChannel",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "getInvites",
                    "access": "",
                    "virtual": false,
                    "description": "Get all invites in the channel",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Array.<Invite>>",
                        "description": ""
                    }
                },
                {
                    "name": "createInvite",
                    "access": "",
                    "virtual": false,
                    "description": "Create an invite for the channel",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Invite generation options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxAge",
                            "type": "Number",
                            "description": "How long the invite should last in seconds",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.maxUses",
                            "type": "Number",
                            "description": "How many uses the invite should last for",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.temporary",
                            "type": "Boolean",
                            "description": "Whether the invite is temporary or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<Invite>",
                        "description": ""
                    }
                },
                {
                    "name": "join",
                    "access": "",
                    "virtual": false,
                    "description": "Joins the channel.",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "VoiceConnection constructor options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.shared",
                            "type": "Object",
                            "description": "Whether the VoiceConnection will be part of a SharedStream or not",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.opusOnly",
                            "type": "Object",
                            "description": "Skip opus encoder initialization. You should not enable this unless you know what you are doing",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<VoiceConnection>",
                        "description": "Resolves with a VoiceConnection"
                    }
                },
                {
                    "name": "leave",
                    "access": "",
                    "virtual": false,
                    "description": "Leaves the channel.",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "permissionsOf",
                    "access": "",
                    "virtual": false,
                    "description": "Get the channel-specific permissions of a member",
                    "parameters": [
                        {
                            "name": "memberID",
                            "type": "String",
                            "description": "The ID of the member",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Permission",
                        "description": ""
                    }
                },
                {
                    "name": "edit",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's properties",
                    "parameters": [
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "The properties to edit",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options.name",
                            "type": "String",
                            "description": "The name of the channel",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.topic",
                            "type": "String",
                            "description": "The topic of the channel (guild text channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.bitrate",
                            "type": "Number",
                            "description": "The bitrate of the channel (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.userLimit",
                            "type": "Number",
                            "description": "The channel user limit (guild voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.parentID",
                            "type": "Number",
                            "description": "The ID of the parent channel category for this channel (guild text/voice channels only)",
                            "default": "",
                            "optional": true,
                            "nullable": true
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<(CategoryChannel|TextChannel|VoiceChannel)>",
                        "description": ""
                    }
                },
                {
                    "name": "editPosition",
                    "access": "",
                    "virtual": false,
                    "description": "Edit the channel's position. Note that channel position numbers are lowest on top and highest at the bottom.",
                    "parameters": [
                        {
                            "name": "position",
                            "type": "Number",
                            "description": "The new position of the channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "delete",
                    "access": "",
                    "virtual": false,
                    "description": "Delete the channel",
                    "parameters": [
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                },
                {
                    "name": "editPermission",
                    "access": "",
                    "virtual": false,
                    "description": "Create a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "allow",
                            "type": "Number",
                            "description": "The permissions number for allowed permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "deny",
                            "type": "Number",
                            "description": "The permissions number for denied permissions",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The object type of the overwrite, either \"member\" or \"role\"",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise.<PermissionOverwrite>",
                        "description": ""
                    }
                },
                {
                    "name": "deletePermission",
                    "access": "",
                    "virtual": false,
                    "description": "Delete a channel permission overwrite",
                    "parameters": [
                        {
                            "name": "overwriteID",
                            "type": "String",
                            "description": "The ID of the overwritten user or role",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "reason",
                            "type": "String",
                            "description": "The reason to be displayed in audit logs",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Promise",
                        "description": ""
                    }
                }
            ]
        },
        {
            "name": "VoiceState",
            "description": "Represents a member's voice state in a call/guild",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "VoiceState",
                "description": "",
                "parameters": [],
                "examples": []
            }
        },
        {
            "name": "Bucket",
            "description": "Handle ratelimiting something",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Bucket",
                "description": "Construct a Bucket",
                "parameters": [
                    {
                        "name": "tokenLimit",
                        "type": "Number",
                        "description": "The max number of tokens the bucket can consume per interval",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "interval",
                        "type": "Number",
                        "description": "How long (in ms) to wait between clearing used tokens",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "latencyRef",
                        "type": "Object",
                        "description": "An object",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "latencyRef.latency",
                        "type": "Number",
                        "description": "Interval between consuming tokens",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    }
                ],
                "examples": []
            },
            "functions": [
                {
                    "name": "queue",
                    "access": "",
                    "virtual": false,
                    "description": "Queue something in the Bucket",
                    "parameters": [
                        {
                            "name": "func",
                            "type": "function",
                            "description": "A callback to call when a token can be consumed",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                }
            ]
        },
        {
            "name": "Collection",
            "description": "Hold a bunch of something",
            "extends": [
                "Map"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "Collection",
                "description": "Construct a Collection",
                "parameters": [
                    {
                        "name": "baseObject",
                        "type": "Class",
                        "description": "The base class for all items",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "limit",
                        "type": "Number",
                        "description": "Max number of items to hold",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    }
                ],
                "examples": []
            },
            "functions": [
                {
                    "name": "add",
                    "access": "",
                    "virtual": false,
                    "description": "Add an object",
                    "parameters": [
                        {
                            "name": "obj",
                            "type": "Object",
                            "description": "The object data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "obj.id",
                            "type": "String",
                            "description": "The ID of the object",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "extra",
                            "type": "Class",
                            "description": "An extra parameter the constructor may need",
                            "default": "",
                            "optional": "",
                            "nullable": true
                        },
                        {
                            "name": "replace",
                            "type": "Boolean",
                            "description": "Whether to replace an existing object with the same ID",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Class",
                        "description": "The existing or newly created object"
                    }
                },
                {
                    "name": "find",
                    "access": "",
                    "virtual": false,
                    "description": "Return the first object to make the function evaluate true",
                    "parameters": [
                        {
                            "name": "func",
                            "type": "function",
                            "description": "A function that takes an object and returns true if it matches",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Class",
                        "description": "The first matching object, or undefined if no match"
                    }
                },
                {
                    "name": "random",
                    "access": "",
                    "virtual": false,
                    "description": "Get a random object from the Collection",
                    "parameters": [],
                    "examples": [],
                    "returns": {
                        "type": "Class",
                        "description": "The random object, or undefined if there is no match"
                    }
                },
                {
                    "name": "filter",
                    "access": "",
                    "virtual": false,
                    "description": "Return all the objects that make the function evaluate true",
                    "parameters": [
                        {
                            "name": "func",
                            "type": "function",
                            "description": "A function that takes an object and returns true if it matches",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Array.<Class>",
                        "description": "An array containing all the objects that matched"
                    }
                },
                {
                    "name": "map",
                    "access": "",
                    "virtual": false,
                    "description": "Return an array with the results of applying the given function to each element",
                    "parameters": [
                        {
                            "name": "func",
                            "type": "function",
                            "description": "A function that takes an object and returns something",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Array",
                        "description": "An array containing the results"
                    }
                },
                {
                    "name": "update",
                    "access": "",
                    "virtual": false,
                    "description": "Update an object",
                    "parameters": [
                        {
                            "name": "obj",
                            "type": "Object",
                            "description": "The updated object data",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "obj.id",
                            "type": "String",
                            "description": "The ID of the object",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "extra",
                            "type": "Class",
                            "description": "An extra parameter the constructor may need",
                            "default": "",
                            "optional": "",
                            "nullable": true
                        },
                        {
                            "name": "replace",
                            "type": "Boolean",
                            "description": "Whether to replace an existing object with the same ID",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Class",
                        "description": "The updated object"
                    }
                },
                {
                    "name": "remove",
                    "access": "",
                    "virtual": false,
                    "description": "Remove an object",
                    "parameters": [
                        {
                            "name": "obj",
                            "type": "Object",
                            "description": "The object",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "obj.id",
                            "type": "String",
                            "description": "The ID of the object",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "Class",
                        "description": "The removed object, or null if nothing was removed"
                    }
                }
            ]
        },
        {
            "name": "SequentialBucket",
            "description": "Ratelimit requests and release in sequence",
            "extends": [],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "SequentialBucket",
                "description": "Construct a SequentialBucket",
                "parameters": [
                    {
                        "name": "tokenLimit",
                        "type": "Number",
                        "description": "The max number of tokens the bucket can consume per interval",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    },
                    {
                        "name": "latencyRef",
                        "type": "Object",
                        "description": "An object",
                        "default": "",
                        "optional": true,
                        "nullable": ""
                    },
                    {
                        "name": "latencyRef.latency",
                        "type": "Number",
                        "description": "Interval between consuming tokens",
                        "default": "",
                        "optional": "",
                        "nullable": ""
                    }
                ],
                "examples": []
            },
            "functions": [
                {
                    "name": "queue",
                    "access": "",
                    "virtual": false,
                    "description": "Queue something in the SequentialBucket",
                    "parameters": [
                        {
                            "name": "func",
                            "type": "function",
                            "description": "A function to call when a token can be consumed. The function will be passed a callback argument, which must be called to allow the bucket to continue to work",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                }
            ]
        },
        {
            "name": "SharedStream",
            "description": "Represents a collection of VoiceConnections sharing an input stream",
            "extends": [
                "EventEmitter"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "SharedStream",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "functions": [
                {
                    "name": "add",
                    "access": "",
                    "virtual": false,
                    "description": "Add a voice connection to the shared stream",
                    "parameters": [
                        {
                            "name": "connection",
                            "type": "VoiceConnection",
                            "description": "The voice connection to add",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "remove",
                    "access": "",
                    "virtual": false,
                    "description": "Remove a voice connection from the shared stream",
                    "parameters": [
                        {
                            "name": "connection",
                            "type": "VoiceConnection",
                            "description": "The voice connection to remove",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "play",
                    "access": "",
                    "virtual": false,
                    "description": "Play an audio or video resource. If playing from a non-opus resource, FFMPEG should be compiled with --enable-libopus for best performance. If playing from HTTPS, FFMPEG must be compiled with --enable-openssl",
                    "parameters": [
                        {
                            "name": "resource",
                            "type": [
                                "ReadableStream",
                                "String"
                            ],
                            "description": "The audio or video resource, either a ReadableStream, URL, or file path",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Music options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.inlineVolume",
                            "type": "Boolean",
                            "description": "Whether to enable on-the-fly volume changing. Note that enabling this leads to increased CPU usage",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.voiceDataTimeout",
                            "type": "Number",
                            "description": "Timeout when waiting for voice data (-1 for no timeout)",
                            "default": 2000,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.inputArgs",
                            "type": "Array.<String>",
                            "description": "Additional input parameters to pass to ffmpeg/avconv (before -i)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.encoderArgs",
                            "type": "Array.<String>",
                            "description": "Additional encoder parameters to pass to ffmpeg/avconv (after -i)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.format",
                            "type": "String",
                            "description": "The format of the resource. If null, FFmpeg will attempt to guess and play the format. Available options: \"dca\", \"ogg\", \"webm\", \"pcm\", null",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.frameDuration",
                            "type": "Number",
                            "description": "The resource opus frame duration (required for DCA/Ogg)",
                            "default": 60,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.frameSize",
                            "type": "Number",
                            "description": "The resource opus frame size",
                            "default": 2880,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.sampleRate",
                            "type": "Number",
                            "description": "The resource audio sampling rate",
                            "default": 48000,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "setVolume",
                    "access": "",
                    "virtual": false,
                    "description": "Sets the volume of this shared stream if inline volume is enabled",
                    "parameters": [
                        {
                            "name": "volume",
                            "type": "number",
                            "description": "The volume as a value from 0 (min) to 1 (max)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "stopPlaying",
                    "access": "",
                    "virtual": false,
                    "description": "Stop the bot from sending audio",
                    "parameters": [],
                    "examples": []
                }
            ],
            "events": [
                {
                    "name": "start",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shared stream starts playing a stream",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "end",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the shared stream finishes playing a stream",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "start",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the voice connection starts playing a stream",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "VoiceConnection",
            "description": "Represents a voice connection",
            "extends": [
                "EventEmitter"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "VoiceConnection",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "events": [
                {
                    "name": "error",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the voice connection encounters an error. This event should be handled by users",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "debug",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when stuff happens and gives more info",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "connect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the voice connection connects",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "ready",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the voice connection turns ready",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "pong",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the voice connection receives a pong",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "speakingStart",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user begins speaking",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "speakingStop",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a user stops speaking",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "disconnect",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the voice connection disconnects",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "end",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when the voice connection finishes playing a stream",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "warn",
                    "access": "",
                    "virtual": false,
                    "description": "Fired to warn of something weird but non-breaking happening",
                    "parameters": [],
                    "examples": []
                }
            ],
            "functions": [
                {
                    "name": "play",
                    "access": "",
                    "virtual": false,
                    "description": "Play an audio or video resource. If playing from a non-opus resource, FFMPEG should be compiled with --enable-libopus for best performance. If playing from HTTPS, FFMPEG must be compiled with --enable-openssl",
                    "parameters": [
                        {
                            "name": "resource",
                            "type": [
                                "ReadableStream",
                                "String"
                            ],
                            "description": "The audio or video resource, either a ReadableStream, URL, or file path",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "options",
                            "type": "Object",
                            "description": "Music options",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.inlineVolume",
                            "type": "Boolean",
                            "description": "Whether to enable on-the-fly volume changing. Note that enabling this leads to increased CPU usage",
                            "default": false,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.voiceDataTimeout",
                            "type": "Number",
                            "description": "Timeout when waiting for voice data (-1 for no timeout)",
                            "default": 2000,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.inputArgs",
                            "type": "Array.<String>",
                            "description": "Additional input parameters to pass to ffmpeg/avconv (before -i)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.encoderArgs",
                            "type": "Array.<String>",
                            "description": "Additional encoder parameters to pass to ffmpeg/avconv (after -i)",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.format",
                            "type": "String",
                            "description": "The format of the resource. If null, FFmpeg will attempt to guess and play the format. Available options: \"dca\", \"ogg\", \"webm\", \"pcm\", null",
                            "default": "",
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.frameDuration",
                            "type": "Number",
                            "description": "The resource opus frame duration (required for DCA/Ogg)",
                            "default": 20,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.frameSize",
                            "type": "Number",
                            "description": "The resource opus frame size",
                            "default": 2880,
                            "optional": true,
                            "nullable": ""
                        },
                        {
                            "name": "options.sampleRate",
                            "type": "Number",
                            "description": "The resource audio sampling rate",
                            "default": 48000,
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "stopPlaying",
                    "access": "",
                    "virtual": false,
                    "description": "Stop the bot from sending audio",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "receive",
                    "access": "",
                    "virtual": false,
                    "description": "Generate a receive stream for the voice connection.",
                    "parameters": [
                        {
                            "name": "type",
                            "type": "String",
                            "description": "The desired vocie data type, either \"opus\" or \"pcm\"",
                            "default": "\"pcm\"",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": [],
                    "returns": {
                        "type": "VoiceDataStream",
                        "description": ""
                    }
                },
                {
                    "name": "switchChannel",
                    "access": "",
                    "virtual": false,
                    "description": "Switch the voice channel the bot is in. The channel to switch to must be in the same guild as the current voice channel",
                    "parameters": [
                        {
                            "name": "channelID",
                            "type": "String",
                            "description": "The ID of the voice channel",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "updateVoiceState",
                    "access": "",
                    "virtual": false,
                    "description": "Update the bot's voice state",
                    "parameters": [
                        {
                            "name": "selfMute",
                            "type": "Boolean",
                            "description": "Whether the bot muted itself or not (audio sending is unaffected)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        },
                        {
                            "name": "selfDeaf",
                            "type": "Boolean",
                            "description": "Whether the bot deafened itself or not (audio receiving is unaffected)",
                            "default": "",
                            "optional": "",
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "setVolume",
                    "access": "",
                    "virtual": false,
                    "description": "Modify the output volume of the current stream (if inlineVolume is enabled for the current stream)",
                    "parameters": [
                        {
                            "name": "volume",
                            "type": "Number",
                            "description": "The desired volume. 0.0 is 0%, 1.0 is 100%, 2.0 is 200%, etc. It is not recommended to go above 2.0",
                            "default": "1.0",
                            "optional": true,
                            "nullable": ""
                        }
                    ],
                    "examples": []
                },
                {
                    "name": "pause",
                    "access": "",
                    "virtual": false,
                    "description": "Pause sending audio (if playing)",
                    "parameters": [],
                    "examples": []
                },
                {
                    "name": "resume",
                    "access": "",
                    "virtual": false,
                    "description": "Resume sending audio (if paused)",
                    "parameters": [],
                    "examples": []
                }
            ]
        },
        {
            "name": "VoiceDataStream",
            "description": "Represents a voice data stream",
            "extends": [
                "EventEmitter"
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "VoiceDataStream",
                "description": "",
                "parameters": [],
                "examples": []
            },
            "events": [
                {
                    "name": "data",
                    "access": "",
                    "virtual": false,
                    "description": "Fired when a voice data packet is received",
                    "parameters": [],
                    "examples": []
                }
            ]
        }
    ]
}
